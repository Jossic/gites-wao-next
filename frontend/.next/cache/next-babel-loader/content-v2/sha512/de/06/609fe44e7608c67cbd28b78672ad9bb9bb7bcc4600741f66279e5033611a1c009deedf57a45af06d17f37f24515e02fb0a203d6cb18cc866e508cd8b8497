{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\pages\\\\partenaires\\\\[slug].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React from 'react';\nimport Layout from '../../components/layout/Layout';\nimport { API, DOMAIN, APP_NAME } from '../../config';\nimport Image from 'next/image';\nimport { Jumbotron, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { ListAllPartenaireCards, ListAllPartenairesNoms, listePartenaireBySlug } from '../../actions/partenairesActions';\n\nconst Partenaire = ({\n  categorie,\n  partenaires\n}) => {\n  const head = () => __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, APP_NAME, \" | \", categorie.nom, ' '), __jsx(\"meta\", {\n    name: \"description\",\n    content: categorie.mdesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${DOMAIN}/gite/${categorie.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${categorie.nom} | ${APP_NAME}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: categorie.mdesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${DOMAIN}/gite/${categorie.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: `${APP_NAME}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: APP_NAME,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${API}/blog/photo/${categorie.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image:secure_url\",\n    content: `${API}/gite/photo/${categorie.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image:type\",\n    content: \"image/jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }));\n\n  const jumbotron = () => __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, __jsx(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"Nos partenaires dans la cat\\xE9gorie \", categorie.nom), __jsx(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, categorie.presSection), __jsx(\"hr\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  }, categorie.presPartenaire), __jsx(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }))));\n\n  const card = () => {\n    {\n      partenaires.map(partenaire => __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: \"/assets/318x180.svg\",\n        alt: \"Card image cap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, __jsx(CardTitle, {\n        tag: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 8\n        }\n      }, partenaire.titre), __jsx(CardSubtitle, {\n        tag: \"h6\",\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }\n      }, \"Card subtitle\"), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 8\n        }\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 8\n        }\n      }, \"Button\")))));\n    }\n  };\n\n  return __jsx(React.Fragment, null, head(), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }, jumbotron(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), card()));\n};\n\nexport async function getStaticPaths() {\n  //lister les noms de\n  const partenairesNoms = await ListAllPartenairesNoms();\n  return {\n    paths: partenairesNoms.map(nom => {\n      return {\n        params: {\n          id: nom._id,\n          slug: nom.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  return listePartenaireBySlug(context.params.slug).then(categorie => {\n    if (categorie.error) {\n      console.log(categorie.error);\n    } else {\n      return ListAllPartenaireCards(categorie._id).then(partenaires => {\n        if (partenaires.error) {\n          console.log(partenaires.error);\n        } else {\n          return {\n            props: {\n              categorie,\n              partenaires\n            }\n          };\n        }\n      });\n    }\n  });\n}\nexport default Partenaire;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/pages/partenaires/[slug].js"],"names":["Head","React","Layout","API","DOMAIN","APP_NAME","Image","Jumbotron","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","ListAllPartenaireCards","ListAllPartenairesNoms","listePartenaireBySlug","Partenaire","categorie","partenaires","head","nom","mdesc","slug","jumbotron","presSection","presPartenaire","card","map","partenaire","titre","getStaticPaths","partenairesNoms","paths","params","id","_id","fallback","getStaticProps","context","then","error","console","log","props"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,cAAtC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SACCC,SADD,EAECC,IAFD,EAGCC,OAHD,EAICC,QAJD,EAKCC,QALD,EAMCC,SAND,EAOCC,YAPD,EAQCC,MARD,QASO,YATP;AAUA,SACCC,sBADD,EAECC,sBAFD,EAGCC,qBAHD,QAIO,kCAJP;;AAMA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAClD,QAAMC,IAAI,GAAG,MACZ,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEhB,QADF,SACec,SAAS,CAACG,GADzB,EAC8B,GAD9B,CADD,EAIC;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEH,SAAS,CAACI,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAKC;AAAM,IAAA,GAAG,EAAC,WAAV;AAAsB,IAAA,IAAI,EAAG,GAAEnB,MAAO,SAAQe,SAAS,CAACK,IAAK,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAMC;AACC,IAAA,QAAQ,EAAC,UADV;AAEC,IAAA,OAAO,EAAG,GAAEL,SAAS,CAACG,GAAI,MAAKjB,QAAS,EAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAUC;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEc,SAAS,CAACI,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,EAWC;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,EAYC;AACC,IAAA,QAAQ,EAAC,QADV;AAEC,IAAA,OAAO,EAAG,GAAEnB,MAAO,SAAQe,SAAS,CAACK,IAAK,EAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,EAgBC;AAAM,IAAA,QAAQ,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAG,GAAEnB,QAAS,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,EAkBC;AAAM,IAAA,QAAQ,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAEA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBD,EAoBC;AACC,IAAA,QAAQ,EAAC,UADV;AAEC,IAAA,OAAO,EAAG,GAAEF,GAAI,eAAcgB,SAAS,CAACK,IAAK,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBD,EAwBC;AACC,IAAA,QAAQ,EAAC,qBADV;AAEC,IAAA,OAAO,EAAG,GAAErB,GAAI,eAAcgB,SAAS,CAACK,IAAK,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBD,EA4BC;AAAM,IAAA,QAAQ,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BD,CADD;;AAiCA,QAAMC,SAAS,GAAG,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACoCN,SAAS,CAACG,GAD9C,CADD,EAIC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBH,SAAS,CAACO,WAA/B,CAJD,EAKC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,SAAS,CAACQ,cAAd,CAND,EAOC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD,CADD,CADD;;AAgBA,QAAMC,IAAI,GAAG,MAAM;AAClB;AACCR,MAAAA,WAAW,CAACS,GAAZ,CAAiBC,UAAD,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,OAAD;AACC,QAAA,GAAG,MADJ;AAEC,QAAA,KAAK,EAAC,MAFP;AAGC,QAAA,GAAG,EAAC,qBAHL;AAIC,QAAA,GAAG,EAAC,gBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAOC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD;AAAW,QAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,UAAU,CAACC,KAAhC,CADD,EAEC,MAAC,YAAD;AAAc,QAAA,GAAG,EAAC,IAAlB;AAAuB,QAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAKC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GALD,EAUC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVD,CAPD,CADD,CADD;AAwBA;AACD,GA3BD;;AA6BA,SACC,4BACEV,IAAI,EADN,EAEC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEI,SAAS,EAFX,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIEG,IAAI,EAJN,CAFD,CADD;AAWA,CA1FD;;AA4FA,OAAO,eAAeI,cAAf,GAAgC;AACtC;AAEA,QAAMC,eAAe,GAAG,MAAMjB,sBAAsB,EAApD;AACA,SAAO;AACNkB,IAAAA,KAAK,EAAED,eAAe,CAACJ,GAAhB,CAAqBP,GAAD,IAAS;AACnC,aAAO;AACNa,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAEd,GAAG,CAACe,GAAV;AAAeb,UAAAA,IAAI,EAAEF,GAAG,CAACE;AAAzB;AADF,OAAP;AAGA,KAJM,CADD;AAMNc,IAAAA,QAAQ,EAAE;AANJ,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,SAAOvB,qBAAqB,CAACuB,OAAO,CAACL,MAAR,CAAeX,IAAhB,CAArB,CAA2CiB,IAA3C,CAAiDtB,SAAD,IAAe;AACrE,QAAIA,SAAS,CAACuB,KAAd,EAAqB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYzB,SAAS,CAACuB,KAAtB;AACA,KAFD,MAEO;AACN,aAAO3B,sBAAsB,CAACI,SAAS,CAACkB,GAAX,CAAtB,CAAsCI,IAAtC,CAA4CrB,WAAD,IAAiB;AAClE,YAAIA,WAAW,CAACsB,KAAhB,EAAuB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYxB,WAAW,CAACsB,KAAxB;AACA,SAFD,MAEO;AACN,iBAAO;AAAEG,YAAAA,KAAK,EAAE;AAAE1B,cAAAA,SAAF;AAAaC,cAAAA;AAAb;AAAT,WAAP;AACA;AACD,OANM,CAAP;AAOA;AACD,GAZM,CAAP;AAaA;AAED,eAAeF,UAAf","sourcesContent":["import Head from 'next/head';\r\nimport React from 'react';\r\nimport Layout from '../../components/layout/Layout';\r\nimport { API, DOMAIN, APP_NAME } from '../../config';\r\nimport Image from 'next/image';\r\nimport {\r\n\tJumbotron,\r\n\tCard,\r\n\tCardImg,\r\n\tCardText,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tCardSubtitle,\r\n\tButton,\r\n} from 'reactstrap';\r\nimport {\r\n\tListAllPartenaireCards,\r\n\tListAllPartenairesNoms,\r\n\tlistePartenaireBySlug,\r\n} from '../../actions/partenairesActions';\r\n\r\nconst Partenaire = ({ categorie, partenaires }) => {\r\n\tconst head = () => (\r\n\t\t<Head>\r\n\t\t\t<title>\r\n\t\t\t\t{APP_NAME} | {categorie.nom}{' '}\r\n\t\t\t</title>\r\n\t\t\t<meta name='description' content={categorie.mdesc} />\r\n\t\t\t<link rel='canonical' href={`${DOMAIN}/gite/${categorie.slug}`} />\r\n\t\t\t<meta\r\n\t\t\t\tproperty='og:title'\r\n\t\t\t\tcontent={`${categorie.nom} | ${APP_NAME}`}\r\n\t\t\t/>\r\n\t\t\t<meta property='og:description' content={categorie.mdesc} />\r\n\t\t\t<meta property='og:type' content='website' />\r\n\t\t\t<meta\r\n\t\t\t\tproperty='og:url'\r\n\t\t\t\tcontent={`${DOMAIN}/gite/${categorie.slug}`}\r\n\t\t\t/>\r\n\t\t\t<meta property='og:site_name' content={`${APP_NAME}`} />\r\n\r\n\t\t\t<meta property='og:site_name' content={APP_NAME} />\r\n\r\n\t\t\t<meta\r\n\t\t\t\tproperty='og:image'\r\n\t\t\t\tcontent={`${API}/blog/photo/${categorie.slug}`}\r\n\t\t\t/>\r\n\t\t\t<meta\r\n\t\t\t\tproperty='og:image:secure_url'\r\n\t\t\t\tcontent={`${API}/gite/photo/${categorie.slug}`}\r\n\t\t\t/>\r\n\t\t\t<meta property='og:image:type' content='image/jpg' />\r\n\t\t</Head>\r\n\t);\r\n\r\n\tconst jumbotron = () => (\r\n\t\t<section>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t<h1 className='display-3'>\r\n\t\t\t\t\t\tNos partenaires dans la catégorie {categorie.nom}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<p className='lead'>{categorie.presSection}</p>\r\n\t\t\t\t\t<hr className='my-2' />\r\n\t\t\t\t\t<p>{categorie.presPartenaire}</p>\r\n\t\t\t\t\t<p className='lead'></p>\r\n\t\t\t\t</Jumbotron>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n\r\n\tconst card = () => {\r\n\t\t{\r\n\t\t\tpartenaires.map((partenaire) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardImg\r\n\t\t\t\t\t\t\ttop\r\n\t\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\t\tsrc='/assets/318x180.svg'\r\n\t\t\t\t\t\t\talt='Card image cap'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<CardTitle tag='h5'>{partenaire.titre}</CardTitle>\r\n\t\t\t\t\t\t\t<CardSubtitle tag='h6' className='mb-2 text-muted'>\r\n\t\t\t\t\t\t\t\tCard subtitle\r\n\t\t\t\t\t\t\t</CardSubtitle>\r\n\t\t\t\t\t\t\t<CardText>\r\n\t\t\t\t\t\t\t\tSome quick example text to build on the card\r\n\t\t\t\t\t\t\t\ttitle and make up the bulk of the card's\r\n\t\t\t\t\t\t\t\tcontent.\r\n\t\t\t\t\t\t\t</CardText>\r\n\t\t\t\t\t\t\t<Button>Button</Button>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{head()}\r\n\t\t\t<Layout>\r\n\t\t\t\t{/* {JSON.stringify(gite)} */}\r\n\t\t\t\t{jumbotron()}\r\n\t\t\t\t<hr />\r\n\t\t\t\t{card()}\r\n\t\t\t</Layout>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\t//lister les noms de\r\n\r\n\tconst partenairesNoms = await ListAllPartenairesNoms();\r\n\treturn {\r\n\t\tpaths: partenairesNoms.map((nom) => {\r\n\t\t\treturn {\r\n\t\t\t\tparams: { id: nom._id, slug: nom.slug },\r\n\t\t\t};\r\n\t\t}),\r\n\t\tfallback: false,\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\treturn listePartenaireBySlug(context.params.slug).then((categorie) => {\r\n\t\tif (categorie.error) {\r\n\t\t\tconsole.log(categorie.error);\r\n\t\t} else {\r\n\t\t\treturn ListAllPartenaireCards(categorie._id).then((partenaires) => {\r\n\t\t\t\tif (partenaires.error) {\r\n\t\t\t\t\tconsole.log(partenaires.error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { props: { categorie, partenaires } };\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default Partenaire;\r\n"]},"metadata":{},"sourceType":"module"}