{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var ListAllPartenaires = function ListAllPartenaires() {\n  return fetch(\"\".concat(API, \"/divers/partenaires\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n_c = ListAllPartenaires;\nexport var listePartenaireById = function listePartenaireById(id, token) {\n  return fetch(\"\".concat(API, \"/divers/partenaire/\").concat(id), {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var createPartenaire = function createPartenaire(partenaire, token) {\n  return fetch(\"\".concat(API, \"/divers/partenaire\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(partenaire)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // export const listReviewsBySlug = async (slug) => {\n// \ttry {\n// \t\tconst { data } = await axios.get(`${API}/reviews/${slug}`);\n// \t\t// console.log(data);\n// \t\treturn data;\n// \t} catch (error) {\n// \t\tconsole.error(error);\n// \t}\n// };\n\nexport var updatePartenaire = function updatePartenaire(partenaire, id, token) {\n  return fetch(\"\".concat(API, \"/divers/partenaire/\").concat(id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(partenaire)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removePartenaire = function removePartenaire(id, token) {\n  return fetch(\"\".concat(API, \"/divers/partenaire/\").concat(id), {\n    method: 'DELETE',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var createPartenaireCard = function createPartenaireCard(partenaireCard, token) {\n  return fetch(\"\".concat(API, \"/divers/partenaire/\").concat(id, \"/card\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(partenaireCard)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAllPartenaires\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/partenairesActions.js"],"names":["fetch","API","ListAllPartenaires","method","then","response","json","err","console","log","listePartenaireById","id","token","headers","Authorization","createPartenaire","partenaire","Accept","body","JSON","stringify","updatePartenaire","removePartenaire","createPartenaireCard","partenaireCard"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const ListAllPartenaires = () => {\r\n\treturn fetch(`${API}/divers/partenaires`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireById = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaire = (partenaire, token) => {\r\n\treturn fetch(`${API}/divers/partenaire`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const listReviewsBySlug = async (slug) => {\r\n// \ttry {\r\n// \t\tconst { data } = await axios.get(`${API}/reviews/${slug}`);\r\n// \t\t// console.log(data);\r\n// \t\treturn data;\r\n// \t} catch (error) {\r\n// \t\tconsole.error(error);\r\n// \t}\r\n// };\r\n\r\nexport const updatePartenaire = (partenaire, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removePartenaire = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaireCard = (partenaireCard, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaireCard),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}