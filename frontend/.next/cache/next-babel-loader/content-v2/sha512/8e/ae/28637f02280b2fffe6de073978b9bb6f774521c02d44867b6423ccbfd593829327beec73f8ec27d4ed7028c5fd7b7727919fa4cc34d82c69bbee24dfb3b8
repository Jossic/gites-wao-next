{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { getCookie } from '../../actions/authActions';\nimport { getClientById } from '../../actions/clientActions';\n\nconst ClientNom = ({\n  value\n}) => {\n  const {\n    0: client,\n    1: setClient\n  } = useState({});\n  const token = getCookie('token');\n\n  const listerUnClient = () => {\n    getClientById(value, token).then(data => {\n      if (data.error) {\n        console.log(error);\n      } else {\n        setClient(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    listerUnClient();\n  }, []);\n  return __jsx(React.Fragment, null, client.nom);\n};\n\nexport default ClientNom;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/ClientNom.js"],"names":["useState","useEffect","getCookie","getClientById","ClientNom","value","client","setClient","token","listerUnClient","then","data","error","console","log","nom"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAChC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,KAAK,GAAGN,SAAS,CAAC,OAAD,CAAvB;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAC5BN,IAAAA,aAAa,CAACE,KAAD,EAAQG,KAAR,CAAb,CAA4BE,IAA5B,CAAkCC,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,OAFD,MAEO;AACNL,QAAAA,SAAS,CAACI,IAAD,CAAT;AACA;AACD,KAND;AAOA,GARD;;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,cAAc;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,4BAAGH,MAAM,CAACS,GAAV,CAAP;AACA,CApBD;;AAsBA,eAAeX,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { getClientById } from '../../actions/clientActions';\r\n\r\nconst ClientNom = ({ value }) => {\r\n\tconst [client, setClient] = useState({});\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst listerUnClient = () => {\r\n\t\tgetClientById(value, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetClient(data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlisterUnClient();\r\n\t}, []);\r\n\r\n\treturn <>{client.nom}</>;\r\n};\r\n\r\nexport default ClientNom;\r\n"]},"metadata":{},"sourceType":"module"}