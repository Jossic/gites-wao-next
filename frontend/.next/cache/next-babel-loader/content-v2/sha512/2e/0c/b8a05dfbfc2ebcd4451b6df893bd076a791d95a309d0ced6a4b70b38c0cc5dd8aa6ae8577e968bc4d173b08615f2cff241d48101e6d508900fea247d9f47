{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormAddImages.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { updateGite } from '../../actions/giteActions';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport { listGitesNoms } from '../../actions/giteActions';\nimport { Spinner, Alert } from 'reactstrap';\n\nvar FormCreateGite = function FormCreateGite() {\n  _s();\n\n  var _useState = useState([]),\n      selectedFiles = _useState[0],\n      setSelectedFiles = _useState[1];\n\n  var handleImageChange = function handleImageChange(e) {\n    // console.log(e.target.files[])\n    if (e.target.files) {\n      var filesArray = Array.from(e.target.files).map(function (file) {\n        return URL.createObjectURL(file);\n      }); // console.log(\"filesArray: \", filesArray);\n\n      setSelectedFiles(function (prevImages) {\n        return prevImages.concat(filesArray);\n      });\n      Array.from(e.target.files).map(function (file) {\n        return URL.revokeObjectURL(file);\n      } // avoid memory leak\n      );\n    }\n  };\n\n  var renderPhotos = function renderPhotos(source) {\n    // console.log('source: ', source);\n    return source.map(function (photo) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: \"\",\n        width: 320,\n        height: 180,\n        className: \"img-thumbnail\"\n      }, photo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, _this);\n    });\n  };\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var isSubmitting = formState.isSubmitting;\n\n  var _useState2 = useState({\n    success: '',\n    loading: false,\n    error: ''\n  }),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var loading = values.loading,\n      success = values.success,\n      error = values.error;\n\n  var _useState3 = useState([]),\n      gites = _useState3[0],\n      setGites = _useState3[1];\n\n  var listDesGites = function listDesGites() {\n    listGitesNoms().then(function (data) {\n      if (data.error) {\n        console.log(error);\n      } else {\n        setGites.apply(void 0, _toConsumableArray(gites).concat([data]));\n      }\n    });\n  };\n\n  useEffect(function () {\n    listDesGites();\n  }, []);\n  var token = getCookie('token');\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var slug, formData, info;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n              slug = data.gite;\n              formData = new FormData();\n              info = _toConsumableArray(data.photos);\n              console.log('info vaut =>', info);\n              console.log('data vaut =>', data);\n              info.map(function (photo, index) {\n                return formData.append('photos', photo);\n              });\n              console.log('formData vaut =>', formData);\n              updateGite(formData, slug, token).then(function (result) {\n                if (result.error) {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    error: result.error\n                  }));\n                } else {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    success: 'Les photos ont bien été envoyées',\n                    loading: false\n                  }));\n                  setTimeout(function () {\n                    Router.push('/admin/gestionImages');\n                  }, 3000);\n                }\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-auto my-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mr-sm-2\",\n                htmlFor: \"inlineFormCustomSelect\",\n                children: \"G\\xEEte/Section concern\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 9\n              }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"gite\",\n                ref: register({\n                  required: true\n                }),\n                className: \"custom-select mr-sm-2\",\n                id: \"inlineFormCustomSelect\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Selection...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 10\n                }, _this), gites.map(function (gite, i) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: gite.slug,\n                    children: gite.nom\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 11\n                  }, _this);\n                }), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Autre\",\n                  children: \"Autres pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 10\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 9\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"border p-2 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              className: \"w-auto\",\n              children: \"Ajout d'images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"btn btn-outline-info\",\n                children: [\"Photos\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: handleImageChange,\n                  ref: register({\n                    required: true\n                  }),\n                  name: \"photos\",\n                  type: \"file\",\n                  accept: \"image/*\",\n                  multiple: true,\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 10\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"btn btn-info mt-3\",\n          children: \"Ajouter ces images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, _this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 16\n    }, _this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"success\",\n      children: \"Les photos ont bien \\xE9t\\xE9 envoy\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: renderPhotos(selectedFiles)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FormCreateGite, \"mRrLi0SUix61DrZqkzeh8Np8QS0=\", false, function () {\n  return [useForm];\n});\n\n_c = FormCreateGite;\nexport default FormCreateGite;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCreateGite\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormAddImages.js"],"names":["useEffect","useState","updateGite","getCookie","useForm","listGitesNoms","Spinner","Alert","FormCreateGite","selectedFiles","setSelectedFiles","handleImageChange","e","target","files","filesArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","renderPhotos","source","photo","register","handleSubmit","formState","isSubmitting","success","loading","error","values","setValues","gites","setGites","listDesGites","then","data","console","log","token","onSubmit","slug","gite","formData","FormData","info","photos","index","append","result","setTimeout","Router","push","required","i","nom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { updateGite } from '../../actions/giteActions';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport { listGitesNoms } from '../../actions/giteActions';\r\nimport { Spinner, Alert } from 'reactstrap';\r\n\r\nconst FormCreateGite = () => {\r\n\tconst [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n\tconst handleImageChange = (e) => {\r\n\t\t// console.log(e.target.files[])\r\n\t\tif (e.target.files) {\r\n\t\t\tconst filesArray = Array.from(e.target.files).map((file) =>\r\n\t\t\t\tURL.createObjectURL(file)\r\n\t\t\t);\r\n\r\n\t\t\t// console.log(\"filesArray: \", filesArray);\r\n\r\n\t\t\tsetSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n\t\t\tArray.from(e.target.files).map(\r\n\t\t\t\t(file) => URL.revokeObjectURL(file) // avoid memory leak\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderPhotos = (source) => {\r\n\t\t// console.log('source: ', source);\r\n\t\treturn source.map((photo) => {\r\n\t\t\treturn (\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={photo}\r\n\t\t\t\t\talt=''\r\n\t\t\t\t\tkey={photo}\r\n\t\t\t\t\twidth={320}\r\n\t\t\t\t\theight={180}\r\n\t\t\t\t\tclassName='img-thumbnail'\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst { register, handleSubmit, formState } = useForm();\r\n\tconst { isSubmitting } = formState;\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\r\n\tconst { loading, success, error } = values;\r\n\tconst [gites, setGites] = useState([]);\r\n\r\n\tconst listDesGites = () => {\r\n\t\tlistGitesNoms().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetGites(...gites, data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlistDesGites();\r\n\t}, []);\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconst slug = data.gite;\r\n\t\tconst formData = new FormData();\r\n\t\tconst info = [...data.photos];\r\n\t\tconsole.log('info vaut =>', info);\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tinfo.map((photo, index) => formData.append('photos', photo));\r\n\r\n\t\tconsole.log('formData vaut =>', formData);\r\n\r\n\t\tupdateGite(formData, slug, token).then((result) => {\r\n\t\t\tif (result.error) {\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tsuccess: 'Les photos ont bien été envoyées',\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionImages');\r\n\t\t\t\t}, 3000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t{/* <div className='col-md-8'></div> */}\r\n\t\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t\t<div className='form-row align-items-center'>\r\n\t\t\t\t\t\t\t<div className='col-auto my-1'>\r\n\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\tclassName='mr-sm-2'\r\n\t\t\t\t\t\t\t\t\thtmlFor='inlineFormCustomSelect'>\r\n\t\t\t\t\t\t\t\t\tGîte/Section concerné\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tname='gite'\r\n\t\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\tclassName='custom-select mr-sm-2'\r\n\t\t\t\t\t\t\t\t\tid='inlineFormCustomSelect'>\r\n\t\t\t\t\t\t\t\t\t<option selected>Selection...</option>\r\n\t\t\t\t\t\t\t\t\t{gites.map((gite, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<option key={i} value={gite.slug}>\r\n\t\t\t\t\t\t\t\t\t\t\t{gite.nom}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t<option value='Autre'>Autres pages</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<fieldset className='border p-2 mt-3'>\r\n\t\t\t\t\t\t\t<legend className='w-auto'>Ajout d'images</legend>\r\n\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='btn btn-outline-info'>\r\n\t\t\t\t\t\t\t\t\tPhotos\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleImageChange}\r\n\t\t\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\t\tname='photos'\r\n\t\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\tclassName='btn btn-info mt-3'>\r\n\t\t\t\t\t\tAjouter ces images\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t{loading && <Spinner color='dark' />}\r\n\t\t\t{success && (\r\n\t\t\t\t<Alert color='success'>Les photos ont bien été envoyées</Alert>\r\n\t\t\t)}\r\n\t\t\t<div className='result'>{renderPhotos(selectedFiles)}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FormCreateGite;\r\n"]},"metadata":{},"sourceType":"module"}