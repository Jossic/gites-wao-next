{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const listAllUsers = token => {\n  return fetch(`${API}/user`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; // export const countNouvelleReservation = () => {\n// \treturn fetch(`${API}/reservation/count`, {\n// \t\tmethod: 'GET',\n// \t})\n// \t\t.then((response) => {\n// \t\t\treturn response.json();\n// \t\t})\n// \t\t.catch((err) => console.log(err));\n// };\n\nexport const getUserById = (id, token) => {\n  return fetch(`${API}/user/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeUser = (id, token) => {\n  return fetch(`${API}/user/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateUser = (user, id, token) => {\n  return fetch(`${API}/user/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/userActions.js"],"names":["fetch","API","listAllUsers","token","method","headers","Authorization","then","response","json","catch","err","console","log","getUserById","id","removeUser","updateUser","user","body","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACtC,SAAOH,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AAC3BG,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAFkB,GAAhB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,WAAW,GAAG,CAACC,EAAD,EAAKZ,KAAL,KAAe;AACzC,SAAOH,KAAK,CAAE,GAAEC,GAAI,SAAQc,EAAG,EAAnB,EAAsB;AACjCX,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAFwB,GAAtB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM;AAaP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKZ,KAAL,KAAe;AACxC,SAAOH,KAAK,CAAE,GAAEC,GAAI,SAAQc,EAAG,EAAnB,EAAsB;AACjCX,IAAAA,MAAM,EAAE,QADyB;AAEjCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAFwB,GAAtB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM;AAaP,OAAO,MAAMM,UAAU,GAAG,CAACC,IAAD,EAAOH,EAAP,EAAWZ,KAAX,KAAqB;AAC9C,SAAOH,KAAK,CAAE,GAAEC,GAAI,SAAQc,EAAG,EAAnB,EAAsB;AACjCX,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAERC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFvB,KAFwB;AAMjCgB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAN2B,GAAtB,CAAL,CAQLX,IARK,CAQCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GAVK,EAWLC,KAXK,CAWEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAP;AAYA,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listAllUsers = (token) => {\r\n\treturn fetch(`${API}/user`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const countNouvelleReservation = () => {\r\n// \treturn fetch(`${API}/reservation/count`, {\r\n// \t\tmethod: 'GET',\r\n// \t})\r\n// \t\t.then((response) => {\r\n// \t\t\treturn response.json();\r\n// \t\t})\r\n// \t\t.catch((err) => console.log(err));\r\n// };\r\n\r\nexport const getUserById = (id, token) => {\r\n\treturn fetch(`${API}/user/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeUser = (id, token) => {\r\n\treturn fetch(`${API}/user/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, id, token) => {\r\n\treturn fetch(`${API}/user/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(user),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}