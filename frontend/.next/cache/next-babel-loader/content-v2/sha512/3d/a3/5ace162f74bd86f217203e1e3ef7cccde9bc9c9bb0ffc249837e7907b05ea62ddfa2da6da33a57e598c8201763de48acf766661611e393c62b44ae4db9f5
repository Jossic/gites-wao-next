{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const listAllMailers = token => {\n  return fetch(`${API}/mailer`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listMailerById = (id, token) => {\n  return fetch(`${API}/mailer/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createMailer = mailer => {\n  return fetch(`${API}/mailer`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(mailer)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeMailer = (id, token) => {\n  return fetch(`${API}/mailer/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateMailer = (response, id, token) => {\n  return fetch(`${API}/mailer/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(response)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/mailerActions.js"],"names":["fetch","API","listAllMailers","token","method","headers","Authorization","then","response","json","catch","err","console","log","listMailerById","id","createMailer","mailer","body","JSON","stringify","removeMailer","updateMailer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACxC,SAAOH,KAAK,CAAE,GAAEC,GAAI,SAAR,EAAkB;AAC7BG,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAFoB,GAAlB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM;AAaP,OAAO,MAAMG,cAAc,GAAG,CAACC,EAAD,EAAKZ,KAAL,KAAe;AAC5C,SAAOH,KAAK,CAAE,GAAEC,GAAI,WAAUc,EAAG,EAArB,EAAwB;AACnCX,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAF0B,GAAxB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM;AAaP,OAAO,MAAMK,YAAY,GAAIC,MAAD,IAAY;AACvC,SAAOjB,KAAK,CAAE,GAAEC,GAAI,SAAR,EAAkB;AAC7BG,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAERC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFvB,KAFoB;AAM7Be,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf;AANuB,GAAlB,CAAL,CAQLV,IARK,CAQCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GAVK,EAWLC,KAXK,CAWEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAP;AAYA,CAbM;AAeP,OAAO,MAAMU,YAAY,GAAG,CAACN,EAAD,EAAKZ,KAAL,KAAe;AAC1C,SAAOH,KAAK,CAAE,GAAEC,GAAI,WAAUc,EAAG,EAArB,EAAwB;AACnCX,IAAAA,MAAM,EAAE,QAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AAF0B,GAAxB,CAAL,CAMLI,IANK,CAMCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,EASLC,KATK,CASEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATV,CAAP;AAUA,CAXM;AAaP,OAAO,MAAMW,YAAY,GAAG,CAACd,QAAD,EAAWO,EAAX,EAAeZ,KAAf,KAAyB;AACpD,SAAOH,KAAK,CAAE,GAAEC,GAAI,WAAUc,EAAG,EAArB,EAAwB;AACnCX,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAERC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFvB,KAF0B;AAMnCe,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AAN6B,GAAxB,CAAL,CAQLD,IARK,CAQCC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GAVK,EAWLC,KAXK,CAWEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXV,CAAP;AAYA,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listAllMailers = (token) => {\r\n\treturn fetch(`${API}/mailer`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listMailerById = (id, token) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createMailer = (mailer) => {\r\n\treturn fetch(`${API}/mailer`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(mailer),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeMailer = (id, token) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateMailer = (response, id, token) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(response),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}