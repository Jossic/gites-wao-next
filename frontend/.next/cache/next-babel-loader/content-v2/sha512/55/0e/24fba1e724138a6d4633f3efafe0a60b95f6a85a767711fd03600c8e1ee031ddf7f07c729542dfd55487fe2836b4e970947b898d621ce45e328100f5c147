{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\HOC\\\\Snackbar.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport const withSnackbar = WrappedComponent => {\n  const classes = useStyles();\n  return props => {\n    const {\n      0: open,\n      1: setOpen\n    } = useState(false);\n    const {\n      0: message,\n      1: setMessage\n    } = useState('Snackbar');\n    const {\n      0: duration,\n      1: setDuration\n    } = useState(6000);\n    const {\n      0: severity,\n      1: setSeverity\n    } = useState('success');\n    /** error | warning | info */\n\n    const showMessage = (message, severity = 'error', duration = 6000) => {\n      setMessage(message);\n      setSeverity(severity);\n      setDuration(duration);\n      setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    return __jsx(React.Fragment, null, __jsx(WrappedComponent, _extends({}, props, {\n      snackbarShowMessage: showMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    })), __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      autoHideDuration: duration,\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Slide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, __jsx(Alert, {\n      variant: \"filled\",\n      onClose: handleClose,\n      severity: severity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, message))));\n  };\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/HOC/Snackbar.js"],"names":["React","useState","Snackbar","Slide","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","withSnackbar","WrappedComponent","classes","open","setOpen","message","setMessage","duration","setDuration","severity","setSeverity","showMessage","handleClose","event","reason","vertical","horizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACrB,SAAO,MAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF;AAEL,iBAAa;AACZC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADC;AAFR;AADkC,CAAZ,CAAD,CAA5B;AASA,OAAO,MAAMC,YAAY,GAAIC,gBAAD,IAAsB;AACjD,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,SAAQD,KAAD,IAAW;AACjB,UAAM;AAAA,SAACU,IAAD;AAAA,SAAOC;AAAP,QAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,UAAM;AAAA,SAACkB,OAAD;AAAA,SAAUC;AAAV,QAAwBnB,QAAQ,CAAC,UAAD,CAAtC;AACA,UAAM;AAAA,SAACoB,QAAD;AAAA,SAAWC;AAAX,QAA0BrB,QAAQ,CAAC,IAAD,CAAxC;AACA,UAAM;AAAA,SAACsB,QAAD;AAAA,SAAWC;AAAX,QAA0BvB,QAAQ,CACvC,SADuC,CAAxC;AAEG;;AAEH,UAAMwB,WAAW,GAAG,CAACN,OAAD,EAAUI,QAAQ,GAAG,OAArB,EAA8BF,QAAQ,GAAG,IAAzC,KAAkD;AACrED,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,KALD;;AAOA,UAAMQ,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC3B;AACA;;AACDV,MAAAA,OAAO,CAAC,KAAD,CAAP;AACA,KALD;;AAOA,WACC,4BACC,MAAC,gBAAD,eACKX,KADL;AAEC,MAAA,mBAAmB,EAAEkB,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,EAKC;AAAK,MAAA,SAAS,EAAET,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,QAAD;AACC,MAAA,YAAY,EAAE;AACbmB,QAAAA,QAAQ,EAAE,QADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OADf;AAKC,MAAA,gBAAgB,EAAET,QALnB;AAMC,MAAA,IAAI,EAAEJ,IANP;AAOC,MAAA,OAAO,EAAES,WAPV;AAQC,MAAA,mBAAmB,EAAEvB,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASC,MAAC,KAAD;AACC,MAAA,OAAO,EAAC,QADT;AAEC,MAAA,OAAO,EAAEuB,WAFV;AAGC,MAAA,QAAQ,EAAEH,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIEJ,OAJF,CATD,CADD,CALD,CADD;AA0BA,GAhDD;AAiDA,CAnDM","sourcesContent":["import React, { useState } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\t'& > * + *': {\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nexport const withSnackbar = (WrappedComponent) => {\r\n\tconst classes = useStyles();\r\n\treturn (props) => {\r\n\t\tconst [open, setOpen] = useState(false);\r\n\t\tconst [message, setMessage] = useState('Snackbar');\r\n\t\tconst [duration, setDuration] = useState(6000);\r\n\t\tconst [severity, setSeverity] = useState(\r\n\t\t\t'success'\r\n\t\t); /** error | warning | info */\r\n\r\n\t\tconst showMessage = (message, severity = 'error', duration = 6000) => {\r\n\t\t\tsetMessage(message);\r\n\t\t\tsetSeverity(severity);\r\n\t\t\tsetDuration(duration);\r\n\t\t\tsetOpen(true);\r\n\t\t};\r\n\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\t\tif (reason === 'clickaway') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetOpen(false);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<WrappedComponent\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t\tsnackbarShowMessage={showMessage}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tautoHideDuration={duration}\r\n\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\tTransitionComponent={Slide}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tvariant='filled'\r\n\t\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\t\tseverity={severity}>\r\n\t\t\t\t\t\t\t{message}\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t</Snackbar>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}