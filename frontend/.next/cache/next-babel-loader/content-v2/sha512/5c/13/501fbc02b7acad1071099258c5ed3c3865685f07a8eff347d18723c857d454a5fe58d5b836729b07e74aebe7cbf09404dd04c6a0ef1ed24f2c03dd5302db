{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormAddImages.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { savePhotos } from '../../actions/giteActions';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport { listGitesNoms } from '../../actions/giteActions';\nimport { Spinner } from 'reactstrap';\n\nconst FormCreateGite = () => {\n  const {\n    0: selectedFiles,\n    1: setSelectedFiles\n  } = useState([]);\n\n  const handleImageChange = e => {\n    // console.log(e.target.files[])\n    if (e.target.files) {\n      const filesArray = Array.from(e.target.files).map(file => URL.createObjectURL(file)); // console.log(\"filesArray: \", filesArray);\n\n      setSelectedFiles(prevImages => prevImages.concat(filesArray));\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file) // avoid memory leak\n      );\n    }\n  };\n\n  const renderPhotos = source => {\n    console.log('source: ', source);\n    return source.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: \"\",\n        width: 320,\n        height: 180,\n        className: \"img-thumbnail\"\n      }, photo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    success: '',\n    loading: false,\n    error: ''\n  });\n  const {\n    0: gites,\n    1: setGites\n  } = useState([]);\n\n  const listDesGites = () => {\n    listGitesNoms().then(data => {\n      if (data.error) {\n        console.log(error);\n      } else {\n        setGites(...gites, data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    listDesGites();\n  }, []);\n  const token = getCookie('token');\n\n  const onSubmit = data => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    console.log('data vaut =>', data);\n    savePhotos(data, token).then(result => {\n      if (result.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: result.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          success: 'Les photos ont bien été envoyées',\n          loading: false\n        }));\n      }\n    });\n  };\n\n  const envoiPhoto = e => {// e.preventDefault();\n    // setValues({ ...values, loading: true });\n    // console.log(formData);\n    // savePhotos(formData, token).then((data) => {\n    // \tif (data.error) {\n    // \t\tsetValues({ ...values, error: data.error });\n    // \t} else {\n    // \t\tsetValues({\n    // \t\t\t...values,\n    // \t\t\tnom: '',\n    // \t\t\terror: '',\n    // \t\t\tphotos: '',\n    // \t\t\tsuccess: `Les photos ont bien été envoyées`,\n    // \t\t\tloading: false,\n    // \t\t});\n    // \t}\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-auto my-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mr-sm-2\",\n                htmlFor: \"inlineFormCustomSelect\",\n                children: \"G\\xEEte/Section concern\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"gite\",\n                ref: register({\n                  required: true\n                }),\n                className: \"custom-select mr-sm-2\",\n                id: \"inlineFormCustomSelect\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Selection...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 10\n                }, this), gites.map((gite, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: gite.nom,\n                  children: gite.nom\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 11\n                }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Autre\",\n                  children: \"Autres pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"border p-2 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              className: \"w-auto\",\n              children: \"Ajout d'images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"btn btn-outline-info\",\n                children: [\"Photos\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: handleImageChange,\n                  ref: register({\n                    required: true\n                  }),\n                  name: \"photos\",\n                  type: \"file\",\n                  accept: \"image/*\",\n                  multiple: true,\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"btn btn-info mt-3\",\n          children: \"Ajouter ces images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: renderPhotos(selectedFiles)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default FormCreateGite;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormAddImages.js"],"names":["useEffect","useState","savePhotos","getCookie","useForm","listGitesNoms","Spinner","FormCreateGite","selectedFiles","setSelectedFiles","handleImageChange","e","target","files","filesArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","renderPhotos","source","console","log","photo","register","handleSubmit","formState","isSubmitting","values","setValues","success","loading","error","gites","setGites","listDesGites","then","data","token","onSubmit","result","envoiPhoto","required","gite","i","nom"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC5B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMS,iBAAiB,GAAIC,CAAD,IAAO;AAChC;AACA,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAoB;AACnB,YAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWL,CAAC,CAACC,MAAF,CAASC,KAApB,EAA2BI,GAA3B,CAAgCC,IAAD,IACjDC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CADkB,CAAnB,CADmB,CAKnB;;AAEAT,MAAAA,gBAAgB,CAAEY,UAAD,IAAgBA,UAAU,CAACC,MAAX,CAAkBR,UAAlB,CAAjB,CAAhB;AACAC,MAAAA,KAAK,CAACC,IAAN,CAAWL,CAAC,CAACC,MAAF,CAASC,KAApB,EAA2BI,GAA3B,CACEC,IAAD,IAAUC,GAAG,CAACI,eAAJ,CAAoBL,IAApB,CADX,CACqC;AADrC;AAGA;AACD,GAdD;;AAgBA,QAAMM,YAAY,GAAIC,MAAD,IAAY;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,WAAOA,MAAM,CAACR,GAAP,CAAYW,KAAD,IAAW;AAC5B,0BACC;AACC,QAAA,GAAG,EAAEA,KADN;AAEC,QAAA,GAAG,EAAC,EAFL;AAIC,QAAA,KAAK,EAAE,GAJR;AAKC,QAAA,MAAM,EAAE,GALT;AAMC,QAAA,SAAS,EAAC;AANX,SAGMA,KAHN;AAAA;AAAA;AAAA;AAAA,cADD;AAUA,KAXM,CAAP;AAYA,GAdD;;AAgBA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAwC3B,OAAO,EAArD;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAAmBD,SAAzB;AAEA,QAAM;AAAA,OAACE,MAAD;AAAA,OAASC;AAAT,MAAsBjC,QAAQ,CAAC;AACpCkC,IAAAA,OAAO,EAAE,EAD2B;AAEpCC,IAAAA,OAAO,EAAE,KAF2B;AAGpCC,IAAAA,KAAK,EAAE;AAH6B,GAAD,CAApC;AAMA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMuC,YAAY,GAAG,MAAM;AAC1BnC,IAAAA,aAAa,GAAGoC,IAAhB,CAAsBC,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACfX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,OAFD,MAEO;AACNE,QAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAWI,IAAX,CAAR;AACA;AACD,KAND;AAOA,GARD;;AAUA1C,EAAAA,SAAS,CAAC,MAAM;AACfwC,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMG,KAAK,GAAGxC,SAAS,CAAC,OAAD,CAAvB;;AAEA,QAAMyC,QAAQ,GAAIF,IAAD,IAAU;AAC1BR,IAAAA,SAAS,iCAAMD,MAAN;AAAcG,MAAAA,OAAO,EAAE;AAAvB,OAAT;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Be,IAA5B;AACAxC,IAAAA,UAAU,CAACwC,IAAD,EAAOC,KAAP,CAAV,CAAwBF,IAAxB,CAA8BI,MAAD,IAAY;AACxC,UAAIA,MAAM,CAACR,KAAX,EAAkB;AACjBH,QAAAA,SAAS,iCAAMD,MAAN;AAAcI,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAA5B,WAAT;AACA,OAFD,MAEO;AACNH,QAAAA,SAAS,iCACLD,MADK;AAERE,UAAAA,OAAO,EAAE,kCAFD;AAGRC,UAAAA,OAAO,EAAE;AAHD,WAAT;AAKA;AACD,KAVD;AAWA,GAdD;;AAgBA,QAAMU,UAAU,GAAInC,CAAD,IAAO,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlBD;;AAoBA,sBACC;AAAA,4BACC;AAAM,MAAA,QAAQ,EAAEmB,YAAY,CAACc,QAAD,CAA5B;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BAEC;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,6BAAf;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACC;AACC,gBAAA,SAAS,EAAC,SADX;AAEC,gBAAA,OAAO,EAAC,wBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAMC;AACC,gBAAA,IAAI,EAAC,MADN;AAEC,gBAAA,GAAG,EAAEf,QAAQ,CAAC;AAAEkB,kBAAAA,QAAQ,EAAE;AAAZ,iBAAD,CAFd;AAGC,gBAAA,SAAS,EAAC,uBAHX;AAIC,gBAAA,EAAE,EAAC,wBAJJ;AAAA,wCAKC;AAAQ,kBAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALD,EAMET,KAAK,CAACrB,GAAN,CAAU,CAAC+B,IAAD,EAAOC,CAAP,kBACV;AAAgB,kBAAA,KAAK,EAAED,IAAI,CAACE,GAA5B;AAAA,4BACEF,IAAI,CAACE;AADP,mBAAaD,CAAb;AAAA;AAAA;AAAA;AAAA,wBADA,CANF,eAWC;AAAQ,kBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAuBC;AAAU,YAAA,SAAS,EAAC,iBAApB;AAAA,oCACC;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAGC;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACC;AAAO,gBAAA,SAAS,EAAC,sBAAjB;AAAA,kDAEC;AACC,kBAAA,QAAQ,EAAEvC,iBADX;AAEC,kBAAA,GAAG,EAAEmB,QAAQ,CAAC;AAAEkB,oBAAAA,QAAQ,EAAE;AAAZ,mBAAD,CAFd;AAGC,kBAAA,IAAI,EAAC,QAHN;AAIC,kBAAA,IAAI,EAAC,MAJN;AAKC,kBAAA,MAAM,EAAC,SALR;AAMC,kBAAA,QAAQ,MANT;AAOC,kBAAA,MAAM;AAPP;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,cADD,eA8CC;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,QAAQ,EAAEf,YAFX;AAGC,UAAA,SAAS,EAAC,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cA9CD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAwDEI,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAxDb,eAyDC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBZ,YAAY,CAAChB,aAAD;AAArC;AAAA;AAAA;AAAA;AAAA,YAzDD;AAAA,kBADD;AA6DA,CA/JD;;AAiKA,eAAeD,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { savePhotos } from '../../actions/giteActions';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport { listGitesNoms } from '../../actions/giteActions';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst FormCreateGite = () => {\r\n\tconst [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n\tconst handleImageChange = (e) => {\r\n\t\t// console.log(e.target.files[])\r\n\t\tif (e.target.files) {\r\n\t\t\tconst filesArray = Array.from(e.target.files).map((file) =>\r\n\t\t\t\tURL.createObjectURL(file)\r\n\t\t\t);\r\n\r\n\t\t\t// console.log(\"filesArray: \", filesArray);\r\n\r\n\t\t\tsetSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n\t\t\tArray.from(e.target.files).map(\r\n\t\t\t\t(file) => URL.revokeObjectURL(file) // avoid memory leak\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderPhotos = (source) => {\r\n\t\tconsole.log('source: ', source);\r\n\t\treturn source.map((photo) => {\r\n\t\t\treturn (\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={photo}\r\n\t\t\t\t\talt=''\r\n\t\t\t\t\tkey={photo}\r\n\t\t\t\t\twidth={320}\r\n\t\t\t\t\theight={180}\r\n\t\t\t\t\tclassName='img-thumbnail'\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst { register, handleSubmit, formState } = useForm();\r\n\tconst { isSubmitting } = formState;\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\r\n\tconst [gites, setGites] = useState([]);\r\n\r\n\tconst listDesGites = () => {\r\n\t\tlistGitesNoms().then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetGites(...gites, data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlistDesGites();\r\n\t}, []);\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tsavePhotos(data, token).then((result) => {\r\n\t\t\tif (result.error) {\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tsuccess: 'Les photos ont bien été envoyées',\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst envoiPhoto = (e) => {\r\n\t\t// e.preventDefault();\r\n\t\t// setValues({ ...values, loading: true });\r\n\t\t// console.log(formData);\r\n\t\t// savePhotos(formData, token).then((data) => {\r\n\t\t// \tif (data.error) {\r\n\t\t// \t\tsetValues({ ...values, error: data.error });\r\n\t\t// \t} else {\r\n\t\t// \t\tsetValues({\r\n\t\t// \t\t\t...values,\r\n\t\t// \t\t\tnom: '',\r\n\t\t// \t\t\terror: '',\r\n\t\t// \t\t\tphotos: '',\r\n\t\t// \t\t\tsuccess: `Les photos ont bien été envoyées`,\r\n\t\t// \t\t\tloading: false,\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t{/* <div className='col-md-8'></div> */}\r\n\t\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t\t<div className='form-row align-items-center'>\r\n\t\t\t\t\t\t\t<div className='col-auto my-1'>\r\n\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\tclassName='mr-sm-2'\r\n\t\t\t\t\t\t\t\t\thtmlFor='inlineFormCustomSelect'>\r\n\t\t\t\t\t\t\t\t\tGîte/Section concerné\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tname='gite'\r\n\t\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\tclassName='custom-select mr-sm-2'\r\n\t\t\t\t\t\t\t\t\tid='inlineFormCustomSelect'>\r\n\t\t\t\t\t\t\t\t\t<option selected>Selection...</option>\r\n\t\t\t\t\t\t\t\t\t{gites.map((gite, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<option key={i} value={gite.nom}>\r\n\t\t\t\t\t\t\t\t\t\t\t{gite.nom}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t<option value='Autre'>Autres pages</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<fieldset className='border p-2 mt-3'>\r\n\t\t\t\t\t\t\t<legend className='w-auto'>Ajout d'images</legend>\r\n\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label className='btn btn-outline-info'>\r\n\t\t\t\t\t\t\t\t\tPhotos\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleImageChange}\r\n\t\t\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\t\tname='photos'\r\n\t\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\tclassName='btn btn-info mt-3'>\r\n\t\t\t\t\t\tAjouter ces images\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t{loading && <Spinner color='dark' />}\r\n\t\t\t<div className='result'>{renderPhotos(selectedFiles)}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FormCreateGite;\r\n"]},"metadata":{},"sourceType":"module"}