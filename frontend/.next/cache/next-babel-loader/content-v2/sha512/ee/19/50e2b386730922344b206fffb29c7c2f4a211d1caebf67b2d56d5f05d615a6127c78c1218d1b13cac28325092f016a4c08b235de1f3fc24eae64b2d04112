{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\lists\\\\ListMessages.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Table } from 'reactstrap';\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport { getCookie } from '../../../actions/authActions';\nimport { Alert, Spinner } from 'reactstrap';\nimport { removeMessage } from '../../../actions/messageActions';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MaterialTable from 'material-table';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    color: 'white'\n  }\n});\n\nconst ListMessages = ({\n  messages,\n  newMessages\n}) => {\n  const classes = useStyles();\n  const token = getCookie('token');\n  const {\n    0: values,\n    1: setvalues\n  } = useState({\n    loading: false,\n    error: '',\n    success: '',\n    message: ''\n  });\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  });\n  const {\n    loading,\n    success,\n    error,\n    message\n  } = values;\n\n  const deleteMessage = id => {\n    setvalues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    removeMessage(id, token).then(data => {\n      console.log('data vaut', data);\n\n      if (data.error) {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: true,\n          success: false\n        }));\n      } else {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: '',\n          success: true,\n          message: data.text\n        }));\n      }\n    });\n  };\n\n  const deleteConfirm = id => {\n    let answer = window.confirm(`Suppression du message ${id}, êtes-vous sûr ?`);\n\n    if (answer) {\n      deleteMessage(id);\n    }\n  };\n\n  return __jsx(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default ListMessages;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/lists/ListMessages.js"],"names":["useEffect","useState","Link","makeStyles","withTheme","getCookie","Alert","Spinner","removeMessage","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","MaterialTable","useStyles","table","minWidth","color","ListMessages","messages","newMessages","classes","token","values","setvalues","loading","error","success","message","state","setState","React","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","deleteMessage","id","then","console","log","text","deleteConfirm","answer","window","confirm","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["// import { Table } from 'reactstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\r\nimport { getCookie } from '../../../actions/authActions';\r\nimport { Alert, Spinner } from 'reactstrap';\r\nimport { removeMessage } from '../../../actions/messageActions';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t\tcolor: 'white',\r\n\t},\r\n});\r\n\r\nconst ListMessages = ({ messages, newMessages }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst [values, setvalues] = useState({\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t\tsuccess: '',\r\n\t\tmessage: '',\r\n\t});\r\n\r\n\tconst [state, setState] = React.useState({\r\n\t\tcolumns: [\r\n\t\t\t{ title: 'Name', field: 'name' },\r\n\t\t\t{ title: 'Surname', field: 'surname' },\r\n\t\t\t{ title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Birth Place',\r\n\t\t\t\tfield: 'birthCity',\r\n\t\t\t\tlookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n\t\t\t},\r\n\t\t],\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Mehmet',\r\n\t\t\t\tsurname: 'Baran',\r\n\t\t\t\tbirthYear: 1987,\r\n\t\t\t\tbirthCity: 63,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Zerya Betül',\r\n\t\t\t\tsurname: 'Baran',\r\n\t\t\t\tbirthYear: 2017,\r\n\t\t\t\tbirthCity: 34,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\tconst { loading, success, error, message } = values;\r\n\r\n\tconst deleteMessage = (id) => {\r\n\t\tsetvalues({ ...values, loading: true });\r\n\t\tremoveMessage(id, token).then((data) => {\r\n\t\t\tconsole.log('data vaut', data);\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: data.text,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteConfirm = (id) => {\r\n\t\tlet answer = window.confirm(\r\n\t\t\t`Suppression du message ${id}, êtes-vous sûr ?`\r\n\t\t);\r\n\t\tif (answer) {\r\n\t\t\tdeleteMessage(id);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MaterialTable\r\n\t\t\ttitle='Editable Example'\r\n\t\t\tcolumns={state.columns}\r\n\t\t\tdata={state.data}\r\n\t\t\teditable={{\r\n\t\t\t\tonRowAdd: (newData) =>\r\n\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState((prevState) => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.push(newData);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\tsetState((prevState) => {\r\n\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowDelete: (oldData) =>\r\n\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState((prevState) => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ListMessages;\r\n"]},"metadata":{},"sourceType":"module"}