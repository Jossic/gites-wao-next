{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormUpdateQR.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { createQR, listeOneQR } from '../../actions/giteActions';\nimport { Spinner } from 'reactstrap';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\n\nvar FormUpdateQR = function FormUpdateQR(_ref) {\n  _s();\n\n  var router = _ref.router;\n  var token = getCookie('token');\n  useEffect(function () {\n    initQR();\n  }, [router]);\n\n  var initQR = function initQR(params) {\n    var preloadedValues = {};\n\n    if (router.query.id) {\n      listeOneQR(router.query.id).then(function (data) {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          preloadedValues = (_readOnlyError(\"preloadedValues\"), {\n            question: data.question,\n            reponse: data.reponse\n          }); // setValues({\n          // \t...values,\n          // \tquestion: data.question,\n          // \treponse: data.reponse,\n          // });\n        }\n      });\n    }\n  };\n\n  var _useForm = useForm({\n    defaultValues: preloadedValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var _useState = useState({\n    question: '',\n    reponse: '',\n    success: '',\n    loading: false,\n    error: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var question = values.question,\n      reponse = values.reponse,\n      success = values.success,\n      loading = values.loading,\n      error = values.error;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n              console.log('data vaut =>', data);\n              updateQR(data, token).then(function (result) {\n                console.log('result vaut =>', result);\n\n                if (result.error) {\n                  console.log('une grosse erreur');\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    error: result.error\n                  }));\n                } else {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    question: '',\n                    reponse: '',\n                    success: true,\n                    loading: false\n                  }));\n                  setTimeout(function () {\n                    Router.push('/admin/gestionDivers/FAQ');\n                  }, 2000);\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"question\",\n              ref: register({\n                required: true\n              }) // value={question}\n              ,\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"R\\xE9ponse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"reponse\",\n              ref: register({\n                required: true\n              }) // value={reponse}\n              ,\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, _this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"La question/r\\xE9ponse \\xE0 bien \\xE9t\\xE9 ajout\\xE9e, redirection en cours...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, _this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          children: \"Cr\\xE9er cette q/r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(FormUpdateQR, \"sv6jOelKj11EZQzpBoPcy8QzSAU=\", false, function () {\n  return [useForm];\n});\n\n_c = FormUpdateQR;\nexport default _c2 = withRouter(FormUpdateQR);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormUpdateQR\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormUpdateQR.js"],"names":["useEffect","useState","createQR","listeOneQR","Spinner","getCookie","useForm","Router","withRouter","FormUpdateQR","router","token","initQR","params","preloadedValues","query","id","then","data","error","console","log","question","reponse","defaultValues","register","handleSubmit","watch","errors","success","loading","values","setValues","onSubmit","updateQR","result","setTimeout","push","required"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { createQR, listeOneQR } from '../../actions/giteActions';\r\nimport { Spinner } from 'reactstrap';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nconst FormUpdateQR = ({ router }) => {\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(() => {\r\n\t\tinitQR();\r\n\t}, [router]);\r\n\r\n\tconst initQR = (params) => {\r\n\t\tconst preloadedValues = {};\r\n\t\tif (router.query.id) {\r\n\t\t\tlisteOneQR(router.query.id).then((data) => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tconsole.log(data.error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpreloadedValues = {\r\n\t\t\t\t\t\tquestion: data.question,\r\n\t\t\t\t\t\treponse: data.reponse,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// setValues({\r\n\t\t\t\t\t// \t...values,\r\n\t\t\t\t\t// \tquestion: data.question,\r\n\t\t\t\t\t// \treponse: data.reponse,\r\n\t\t\t\t\t// });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst { register, handleSubmit, watch, errors } = useForm({\r\n\t\tdefaultValues: preloadedValues,\r\n\t});\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tquestion: '',\r\n\t\treponse: '',\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\tconst { question, reponse, success, loading, error } = values;\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tupdateQR(data, token).then((result) => {\r\n\t\t\tconsole.log('result vaut =>', result);\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.log('une grosse erreur');\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tquestion: '',\r\n\t\t\t\t\treponse: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionDivers/FAQ');\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Question</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='question'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={question}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='2'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Réponse</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='reponse'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={reponse}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='5'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\tLa question/réponse à bien été ajoutée, redirection en\r\n\t\t\t\t\t\tcours...\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <div className='alert alert-danger'>{error}</div>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit' className='btn btn-info'>\r\n\t\t\t\t\t\tCréer cette q/r\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(FormUpdateQR);\r\n"]},"metadata":{},"sourceType":"module"}