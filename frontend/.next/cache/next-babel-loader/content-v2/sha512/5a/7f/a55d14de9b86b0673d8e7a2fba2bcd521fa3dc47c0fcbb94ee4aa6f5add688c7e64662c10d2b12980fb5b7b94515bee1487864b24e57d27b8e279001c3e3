{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var listGiteDetails = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(slug) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(API, \"/gite/\").concat(slug));\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            console.log(data);\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function listGiteDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var listGiteNom = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(slug) {\n    var _yield$axios$get2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(API, \"/gites\"));\n\n          case 3:\n            _yield$axios$get2 = _context2.sent;\n            data = _yield$axios$get2.data;\n            console.log(data);\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function listGiteNom(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/giteActions.js"],"names":["axios","fetch","API","listGiteDetails","slug","get","data","console","log","error","listGiteNom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,eAAe;AAAA,sEAAG,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAWNJ,KAAK,CAACK,GAAN,WAAaH,GAAb,mBAAyBE,IAAzB,EAXM;;AAAA;AAAA;AAWrBE,YAAAA,IAXqB,oBAWrBA,IAXqB;AAY7BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAZ6B,6CAatBA,IAbsB;;AAAA;AAAA;AAAA;AAe7BC,YAAAA,OAAO,CAACE,KAAR;;AAf6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfN,eAAe;AAAA;AAAA;AAAA,GAArB;AAmBP,OAAO,IAAMO,WAAW;AAAA,uEAAG,kBAAON,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFJ,KAAK,CAACK,GAAN,WAAaH,GAAb,YAFE;;AAAA;AAAA;AAEjBI,YAAAA,IAFiB,qBAEjBA,IAFiB;AAGzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHyB,8CAIlBA,IAJkB;;AAAA;AAAA;AAAA;AAMzBC,YAAAA,OAAO,CAACE,KAAR;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import axios from 'axios';\r\nimport fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listGiteDetails = async (slug) => {\r\n\t// return fetch(`${API}/gite/${slug}`, {\r\n\t// \tmethod: 'GET',\r\n\t// })\r\n\t// \t.then((response) => {\r\n\t// \t\tconsole.log(response);\r\n\t// \t\treturn response.json();\r\n\t// \t})\r\n\t// \t.catch((err) => console.log(err));\r\n\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${API}/gite/${slug}`);\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n\r\nexport const listGiteNom = async (slug) => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${API}/gites`);\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}