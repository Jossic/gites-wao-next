{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const listAllMessages = () => {\n  return fetch(`${API}/message`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listMessageById = id => {\n  return fetch(`${API}/message/${id}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const countMessageNonLus = () => {\n  return fetch(`${API}/message/count`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createMessage = message => {\n  console.log('dans action', message);\n  return fetch(`${API}/message`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(message)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeMessage = (id, token) => {\n  return fetch(`${API}/message/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateMessage = (repsonse, id, token) => {\n  return fetch(`${API}/review/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(repsonse)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/messageActions.js"],"names":["fetch","API","listAllMessages","method","then","response","json","catch","err","console","log","listMessageById","id","countMessageNonLus","createMessage","message","headers","body","JSON","stringify","removeMessage","token","Authorization","updateMessage","repsonse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listAllMessages = () => {\r\n\treturn fetch(`${API}/message`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listMessageById = (id) => {\r\n\treturn fetch(`${API}/message/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const countMessageNonLus = () => {\r\n\treturn fetch(`${API}/message/count`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createMessage = (message) => {\r\n\tconsole.log('dans action', message);\r\n\treturn fetch(`${API}/message`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(message),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeMessage = (id, token) => {\r\n\treturn fetch(`${API}/message/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateMessage = (repsonse, id, token) => {\r\n\treturn fetch(`${API}/review/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(repsonse),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}