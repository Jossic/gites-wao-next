{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\forms\\\\gites\\\\FormInfosContrat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { withRouter } from 'next/router';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useEffect, useRef, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { updateReservation } from '../../../../actions/reservationActions';\nimport { getCookie } from '../../../../actions/authActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst FormInfosContrat = ({\n  preloadedValues\n}) => {\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  console.log(preloadedValues);\n  const token = getCookie('token');\n  const classes = useStyles();\n  const {\n    control,\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: preloadedValues\n  });\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    heureArrivee: 'à partir de 17h',\n    heureDepart: 'à partir de 17h',\n    loading: false,\n    success: '',\n    error: '',\n    message: ''\n  });\n  const {\n    success,\n    loading,\n    error,\n    message\n  } = values;\n\n  const onSubmit = async data => {\n    console.log(data);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    updateReservation(data, router.query.id, token).then(result => {\n      if (result.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: result.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          success: true,\n          loading: false,\n          message: result.message\n        })); // setTimeout(() => {\n        // \tRouter.push('/admin/gestionDivers/partenaires');\n        // }, 3000);\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, loading && __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, \"Editor loading\"), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, \"Valider les modifications\")));\n};\n\nexport default withRouter(FormInfosContrat);","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/forms/gites/FormInfosContrat.js"],"names":["Button","CircularProgress","withRouter","makeStyles","withStyles","useEffect","useRef","useState","useForm","Controller","updateReservation","getCookie","useStyles","theme","root","width","button","marginRight","spacing","marginTop","formControl","margin","textField","FormInfosContrat","preloadedValues","editorRef","editorLoaded","setEditorLoaded","CKEditor","ClassicEditor","current","require","console","log","token","classes","control","register","handleSubmit","defaultValues","values","setValues","heureArrivee","heureDepart","loading","success","error","message","onSubmit","data","router","query","id","then","result","editor","event","getData"],"mappings":"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","sourcesContent":["import { Button, CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'next/router';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { updateReservation } from '../../../../actions/reservationActions';\r\nimport { getCookie } from '../../../../actions/authActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tbutton: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\tmarginTop: theme.spacing(2),\r\n\t\twidth: '100%',\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t},\r\n\ttextField: {\r\n\t\tmargin: theme.spacing(1),\r\n\t},\r\n}));\r\n\r\nconst FormInfosContrat = ({ preloadedValues }) => {\r\n\tconst editorRef = useRef();\r\n\tconst [editorLoaded, setEditorLoaded] = useState(false);\r\n\tconst { CKEditor, ClassicEditor } = editorRef.current || {};\r\n\r\n\tuseEffect(() => {\r\n\t\teditorRef.current = {\r\n\t\t\tCKEditor: require('@ckeditor/ckeditor5-react'),\r\n\t\t\tClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n\t\t};\r\n\t\tsetEditorLoaded(true);\r\n\t}, []);\r\n\r\n\tconsole.log(preloadedValues);\r\n\tconst token = getCookie('token');\r\n\tconst classes = useStyles();\r\n\tconst { control, register, handleSubmit } = useForm({\r\n\t\tdefaultValues: preloadedValues,\r\n\t});\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\theureArrivee: 'à partir de 17h',\r\n\t\theureDepart: 'à partir de 17h',\r\n\t\tloading: false,\r\n\t\tsuccess: '',\r\n\t\terror: '',\r\n\t\tmessage: '',\r\n\t});\r\n\tconst { success, loading, error, message } = values;\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tconsole.log(data);\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tupdateReservation(data, router.query.id, token).then((result) => {\r\n\t\t\tif (result.error) {\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tmessage: result.message,\r\n\t\t\t\t});\r\n\t\t\t\t// setTimeout(() => {\r\n\t\t\t\t// \tRouter.push('/admin/gestionDivers/partenaires');\r\n\t\t\t\t// }, 3000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <CircularProgress />}\r\n\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t{editorLoaded ? (\r\n\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\t\tonInit={(editor) => {\r\n\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>Editor loading</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* <CKEditor\r\n\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\tonReady={(editor) => {\r\n\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\tonReady={(editor) => {\r\n\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\tonReady={(editor) => {\r\n\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\tonReady={(editor) => {\r\n\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\tdata='<p>Hello from CKEditor 5!</p>'\r\n\t\t\t\t\tonReady={(editor) => {\r\n\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\tconsole.log({ event, editor, data });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/> */}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tclassName={classes.button}>\r\n\t\t\t\t\tValider les modifications\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(FormInfosContrat);\r\n"]},"metadata":{},"sourceType":"module"}