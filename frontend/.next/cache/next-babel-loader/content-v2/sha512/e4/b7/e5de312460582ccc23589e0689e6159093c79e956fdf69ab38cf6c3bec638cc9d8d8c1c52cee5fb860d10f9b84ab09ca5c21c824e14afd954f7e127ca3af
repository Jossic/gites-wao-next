{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormCreateQR.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { createQR } from '../../actions/giteActions';\nimport { Spinner } from 'reactstrap';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\n\nconst FormCreateQR = () => {\n  const token = getCookie('token');\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    question: '',\n    reponse: '',\n    success: '',\n    loading: false,\n    error: ''\n  });\n  const {\n    question,\n    reponse,\n    success,\n    loading,\n    error\n  } = values;\n\n  const onSubmit = async data => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    console.log('data vaut =>', data);\n    createQR(data, token).then(result => {\n      console.log('result vaut =>', result);\n\n      if (result.error) {\n        console.log('une grosse erreur');\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: result.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          question: '',\n          reponse: '',\n          success: true,\n          loading: false\n        }));\n        setTimeout(() => {\n          Router.push('/admin/gestionDivers/FAQ');\n        }, 2000);\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, \"Question\"), __jsx(\"textarea\", {\n    type: \"text\",\n    name: \"question\",\n    ref: register({\n      required: true\n    }) // value={question}\n    ,\n    className: \"form-control\",\n    cols: \"30\",\n    rows: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, \"R\\xE9ponse\"), __jsx(\"textarea\", {\n    type: \"text\",\n    name: \"reponse\",\n    ref: register({\n      required: true\n    }) // value={reponse}\n    ,\n    className: \"form-control\",\n    cols: \"30\",\n    rows: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  })))), success && __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, \"La question/r\\xE9ponse \\xE0 bien \\xE9t\\xE9 ajout\\xE9e, redirection en cours...\"), loading && __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })), error && __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, error), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, \"Cr\\xE9er cette q/r\"))));\n};\n\nexport default FormCreateQR;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormCreateQR.js"],"names":["useEffect","useState","createQR","Spinner","getCookie","useForm","Router","FormCreateQR","token","register","handleSubmit","watch","errors","values","setValues","question","reponse","success","loading","error","onSubmit","data","console","log","then","result","setTimeout","push","required"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { createQR } from '../../actions/giteActions';\r\nimport { Spinner } from 'reactstrap';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport Router from 'next/router';\r\n\r\nconst FormCreateQR = () => {\r\n\tconst token = getCookie('token');\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tquestion: '',\r\n\t\treponse: '',\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\tconst { question, reponse, success, loading, error } = values;\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tcreateQR(data, token).then((result) => {\r\n\t\t\tconsole.log('result vaut =>', result);\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.log('une grosse erreur');\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tquestion: '',\r\n\t\t\t\t\treponse: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionDivers/FAQ');\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Question</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='question'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={question}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='2'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Réponse</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='reponse'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={reponse}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='5'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\tLa question/réponse à bien été ajoutée, redirection en\r\n\t\t\t\t\t\tcours...\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <div className='alert alert-danger'>{error}</div>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit' className='btn btn-info'>\r\n\t\t\t\t\t\tCréer cette q/r\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FormCreateQR;\r\n"]},"metadata":{},"sourceType":"module"}