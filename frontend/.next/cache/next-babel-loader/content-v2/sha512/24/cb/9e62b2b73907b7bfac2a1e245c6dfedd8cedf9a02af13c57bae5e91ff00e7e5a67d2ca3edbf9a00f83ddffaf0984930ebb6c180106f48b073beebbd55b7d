{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const ListAllPartenaires = () => {\n  return fetch(`${API}/divers/partenaires`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const ListAllPartenairesNoms = () => {\n  return fetch(`${API}/divers/partenaires/noms`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listePartenaireById = id => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listePartenaireBySlug = slug => {\n  return fetch(`${API}/divers/partenaire/slug/${slug}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createPartenaire = (partenaire, token) => {\n  return fetch(`${API}/divers/partenaire`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaire)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updatePartenaire = (partenaire, id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaire)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removePartenaire = (id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const ListAllPartenaireCards = id => {\n  return fetch(`${API}/divers/partenaire/${id}/cards`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listePartenaireCardById = (id, idCard) => {\n  return fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createPartenaireCard = (partenaireCard, id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}/card`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaireCard)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updatePartenaireCard = (partenaireCard, id, idCard, token) => {\n  return fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaireCard)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removePartenaireCard = (id, idCard, token) => {\n  return fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/partenairesActions.js"],"names":["fetch","API","ListAllPartenaires","method","then","response","json","catch","err","console","log","ListAllPartenairesNoms","listePartenaireById","id","listePartenaireBySlug","slug","createPartenaire","partenaire","token","headers","Accept","Authorization","body","JSON","stringify","updatePartenaire","removePartenaire","ListAllPartenaireCards","listePartenaireCardById","idCard","createPartenaireCard","partenaireCard","updatePartenaireCard","removePartenaireCard"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const ListAllPartenaires = () => {\r\n\treturn fetch(`${API}/divers/partenaires`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const ListAllPartenairesNoms = () => {\r\n\treturn fetch(`${API}/divers/partenaires/noms`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireById = (id) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireBySlug = (slug) => {\r\n\treturn fetch(`${API}/divers/partenaire/slug/${slug}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaire = (partenaire, token) => {\r\n\treturn fetch(`${API}/divers/partenaire`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePartenaire = (partenaire, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removePartenaire = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const ListAllPartenaireCards = (id) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/cards`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireCardById = (id, idCard) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaireCard = (partenaireCard, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaireCard),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePartenaireCard = (partenaireCard, id, idCard, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaireCard),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removePartenaireCard = (id, idCard, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card/${idCard}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}