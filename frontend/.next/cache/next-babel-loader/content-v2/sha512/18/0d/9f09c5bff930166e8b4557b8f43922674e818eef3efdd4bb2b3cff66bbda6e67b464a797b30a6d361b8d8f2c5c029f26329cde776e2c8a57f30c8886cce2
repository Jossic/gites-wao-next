{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\ListQR.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Table } from 'reactstrap';\nimport { listeDesQR, removeQR } from '../../actions/giteActions';\nimport { useEffect, useState } from 'react';\nimport { API } from '../../config';\nimport Link from 'next/link';\nimport { getCookie } from '../../actions/authActions';\nimport { Alert, Spinner } from 'reactstrap';\n\nvar ListGites = function ListGites() {\n  _s();\n\n  var _useState = useState([]),\n      QRs = _useState[0],\n      setQRs = _useState[1];\n\n  var _useState2 = useState({\n    loading: false,\n    error: '',\n    success: ''\n  }),\n      values = _useState2[0],\n      setvalues = _useState2[1];\n\n  var loading = values.loading,\n      error = values.error,\n      success = values.success;\n  var token = getCookie('token');\n\n  var listerLesQR = function listerLesQR() {\n    listeDesQR(token).then(function (data) {\n      if (data.error) {\n        console.log(error);\n      } else {\n        setQRs.apply(void 0, _toConsumableArray(QRs).concat([data]));\n      }\n    });\n  };\n\n  useEffect(function () {\n    listerLesQR();\n  }, []);\n\n  var deleteQR = function deleteQR(id) {\n    setvalues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    removeQR(id, token).then(function (data) {\n      if (data.error) {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: true,\n          success: false\n        }));\n      } else {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: '',\n          success: true,\n          message: data.message\n        }));\n      }\n    });\n  };\n\n  var deleteConfirm = function deleteConfirm(id) {\n    var answer = window.confirm('Cette opération est irréversible, Etes-vous sur de vouloir supprimer cet article ?');\n\n    if (answer) {\n      deleteQR(id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, _this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, _this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"danger\",\n      children: \"Une erreur est survenue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, _this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"R\\xE9ponse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: QRs.map(function (QR) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: QR.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: QR.reponse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/admin/crud/gite/\".concat(QR._id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    \"class\": \"fas fa-pencil-ruler\",\n                    style: {\n                      color: 'orange'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 11\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 10\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: function onClick() {\n                  return deleteConfirm(QR._id);\n                },\n                \"class\": \"fas fa-trash-alt\",\n                style: {\n                  color: 'red',\n                  cursor: 'pointer'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ListGites, \"aw14p1AIF/9byo6oKbXgvHA++iw=\");\n\n_c = ListGites;\nexport default ListGites;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListGites\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/ListQR.js"],"names":["Table","listeDesQR","removeQR","useEffect","useState","API","Link","getCookie","Alert","Spinner","ListGites","QRs","setQRs","loading","error","success","values","setvalues","token","listerLesQR","then","data","console","log","deleteQR","id","message","deleteConfirm","answer","window","confirm","map","QR","question","reponse","_id","color","cursor"],"mappings":"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","sourcesContent":["import { Table } from 'reactstrap';\r\nimport { listeDesQR, removeQR } from '../../actions/giteActions';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../../config';\r\nimport Link from 'next/link';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { Alert, Spinner } from 'reactstrap';\r\n\r\nconst ListGites = () => {\r\n\tconst [QRs, setQRs] = useState([]);\r\n\r\n\tconst [values, setvalues] = useState({\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t\tsuccess: '',\r\n\t});\r\n\r\n\tconst { loading, error, success } = values;\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst listerLesQR = () => {\r\n\t\tlisteDesQR(token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetQRs(...QRs, data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlisterLesQR();\r\n\t}, []);\r\n\r\n\tconst deleteQR = (id) => {\r\n\t\tsetvalues({ ...values, loading: true });\r\n\t\tremoveQR(id, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: data.message,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteConfirm = (id) => {\r\n\t\tlet answer = window.confirm(\r\n\t\t\t'Cette opération est irréversible, Etes-vous sur de vouloir supprimer cet article ?'\r\n\t\t);\r\n\t\tif (answer) {\r\n\t\t\tdeleteQR(id);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{success && <Alert color='success'>{message}</Alert>}\r\n\t\t\t{error && <Alert color='danger'>Une erreur est survenue</Alert>}\r\n\t\t\t<Table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Question</th>\r\n\t\t\t\t\t\t<th>Réponse</th>\r\n\r\n\t\t\t\t\t\t<th colSpan='2'>Actions</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{QRs.map((QR) => (\r\n\t\t\t\t\t\t<tr className='mt-5'>\r\n\t\t\t\t\t\t\t<th>{QR.question}</th>\r\n\t\t\t\t\t\t\t<th>{QR.reponse}</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<Link href={`/admin/crud/gite/${QR._id}`}>\r\n\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclass='fas fa-pencil-ruler'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange' }}></i>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteConfirm(QR._id)}\r\n\t\t\t\t\t\t\t\t\tclass='fas fa-trash-alt'\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t}}></i>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ListGites;\r\n"]},"metadata":{},"sourceType":"module"}