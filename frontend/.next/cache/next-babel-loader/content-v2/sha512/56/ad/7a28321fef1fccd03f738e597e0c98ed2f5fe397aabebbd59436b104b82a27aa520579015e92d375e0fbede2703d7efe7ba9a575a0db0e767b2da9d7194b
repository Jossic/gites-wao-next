{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gites\\\\Dropbox\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\forms\\\\FormUpdateReview.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { listeOneReview, updateReview } from '../../../actions/reviewActions';\nimport { Spinner, Alert } from 'reactstrap';\nimport { listGitesNoms } from '../../../actions/giteActions';\nimport { getCookie } from '../../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\n\nconst FormUpdateReview = ({\n  preloadedValues,\n  router\n}) => {\n  const token = getCookie('token');\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: preloadedValues\n  });\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    client: '',\n    giteConcerne: '',\n    commentaire: '',\n    note: '',\n    success: '',\n    loading: false,\n    error: ''\n  });\n  const {\n    success,\n    loading,\n    error,\n    giteConcerne\n  } = values;\n  const {\n    0: gites,\n    1: setGites\n  } = useState([]);\n\n  const listDesGites = () => {\n    listGitesNoms().then(data => {\n      console.log('id', router.query.id);\n\n      if (data.error) {\n        console.log(error);\n      } else {\n        setGites(...gites, data);\n      }\n    });\n  };\n\n  const listDetailReview = () => {\n    const ident = router.query.id;\n    listeOneReview(ident, token).then(data => {\n      console.log('data review vaut', data.giteConcerne);\n\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        const giteConc = data.giteConcerne;\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          giteConcerne: giteConc\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    listDetailReview();\n    listDesGites();\n  }, []);\n\n  const onSubmit = async data => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    console.log('data vaut =>', data);\n    updateReview(data, router.query.id, token).then(result => {\n      console.log('result vaut =>', result);\n\n      if (result.error) {\n        console.log('une grosse erreur');\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: result.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          client: '',\n          giteConcerne: '',\n          commentaire: '',\n          note: '',\n          success: true,\n          loading: false\n        }));\n        setTimeout(() => {\n          Router.push('/admin/gestionReviews');\n        }, 3000);\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }, \"Selection du g\\xEEte*\"), __jsx(\"select\", {\n    ref: register({\n      required: true\n    }),\n    name: \"giteConcerne\" // value={giteConcerne}\n    ,\n    className: \"custom-select mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"G\\xEEte...\"), gites.map((gite, i) => __jsx(\"option\", {\n    key: i,\n    value: gite.slug,\n    selected: gite.slug === giteConcerne && 'selected',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  }, gite.nom)))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }\n  }, \"Nom & premi\\xE8re lettre du pr\\xE9nom du client (pour l'anonymat des commentaires)*\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"client\",\n    ref: register({\n      required: true\n    }) // value={client}\n    ,\n    className: \"form-control\",\n    c: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  }, \"Note sur 5 *\"), __jsx(\"select\", {\n    ref: register({\n      required: true\n    }),\n    name: \"note\",\n    className: \"custom-select mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Votre note...\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"1 - Tr\\xE8s mauvais\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"2 - Mauvais\"), __jsx(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"3 - Moyen\"), __jsx(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"4 - Bon\"), __jsx(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"5 - Tr\\xE8s bon\"))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }\n  }, \"Commentaire\"), __jsx(\"textarea\", {\n    type: \"text\",\n    name: \"commentaire\",\n    ref: register() // value={commentaire}\n    ,\n    className: \"form-control\",\n    cols: \"30\",\n    rows: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 8\n    }\n  })))), success && __jsx(Alert, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  }, \"La review a bien \\xE9t\\xE9 modifi\\xE9e, redirection en cours...\"), loading && __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  })), error && __jsx(Alert, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, error), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, \"Modifier ce commentaire\"))));\n}; // export async function getServerSideProps(context) {\n// \tlisteOneReview().then((data) => {\n// \t\tif (data.error) {\n// \t\t\tconsole.log(data.error);\n// \t\t} else {\n// \t\t\treturn {\n// \t\t\t\tprops: {\n// \t\t\t\t\tgite: data,\n// \t\t\t\t},\n// \t\t\t};\n// \t\t}\n// \t});\n// }\n\n\nexport default withRouter(FormUpdateReview);","map":{"version":3,"sources":["C:/Users/gites/Dropbox/gites-wao/frontend/components/admin/forms/FormUpdateReview.js"],"names":["useEffect","useState","listeOneReview","updateReview","Spinner","Alert","listGitesNoms","getCookie","useForm","Router","withRouter","FormUpdateReview","preloadedValues","router","token","register","handleSubmit","defaultValues","values","setValues","client","giteConcerne","commentaire","note","success","loading","error","gites","setGites","listDesGites","then","data","console","log","query","id","listDetailReview","ident","giteConc","onSubmit","result","setTimeout","push","required","map","gite","i","slug","nom"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,gCAA7C;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAiC;AACzD,QAAMC,KAAK,GAAGP,SAAS,CAAC,OAAD,CAAvB;AAEA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BR,OAAO,CAAC;AAC1CS,IAAAA,aAAa,EAAEL;AAD2B,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAC;AACpCmB,IAAAA,MAAM,EAAE,EAD4B;AAEpCC,IAAAA,YAAY,EAAE,EAFsB;AAGpCC,IAAAA,WAAW,EAAE,EAHuB;AAIpCC,IAAAA,IAAI,EAAE,EAJ8B;AAKpCC,IAAAA,OAAO,EAAE,EAL2B;AAMpCC,IAAAA,OAAO,EAAE,KAN2B;AAOpCC,IAAAA,KAAK,EAAE;AAP6B,GAAD,CAApC;AASA,QAAM;AAAEF,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BL,IAAAA;AAA3B,MAA4CH,MAAlD;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoB3B,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAM4B,YAAY,GAAG,MAAM;AAC1BvB,IAAAA,aAAa,GAAGwB,IAAhB,CAAsBC,IAAD,IAAU;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBpB,MAAM,CAACqB,KAAP,CAAaC,EAA/B;;AACA,UAAIJ,IAAI,CAACL,KAAT,EAAgB;AACfM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,OAFD,MAEO;AACNE,QAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAWI,IAAX,CAAR;AACA;AACD,KAPD;AAQA,GATD;;AAWA,QAAMK,gBAAgB,GAAG,MAAM;AAC9B,UAAMC,KAAK,GAAGxB,MAAM,CAACqB,KAAP,CAAaC,EAA3B;AACAjC,IAAAA,cAAc,CAACmC,KAAD,EAAQvB,KAAR,CAAd,CAA6BgB,IAA7B,CAAmCC,IAAD,IAAU;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAI,CAACV,YAArC;;AACA,UAAIU,IAAI,CAACL,KAAT,EAAgB;AACfM,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,KAAjB;AACA,OAFD,MAEO;AACN,cAAMY,QAAQ,GAAGP,IAAI,CAACV,YAAtB;AACAF,QAAAA,SAAS,iCAAMD,MAAN;AAAcG,UAAAA,YAAY,EAAEiB;AAA5B,WAAT;AACA;AACD,KARD;AASA,GAXD;;AAaAtC,EAAAA,SAAS,CAAC,MAAM;AACfoC,IAAAA,gBAAgB;AAChBP,IAAAA,YAAY;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMU,QAAQ,GAAG,MAAOR,IAAP,IAAgB;AAChCZ,IAAAA,SAAS,iCAAMD,MAAN;AAAcO,MAAAA,OAAO,EAAE;AAAvB,OAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACA5B,IAAAA,YAAY,CAAC4B,IAAD,EAAOlB,MAAM,CAACqB,KAAP,CAAaC,EAApB,EAAwBrB,KAAxB,CAAZ,CAA2CgB,IAA3C,CAAiDU,MAAD,IAAY;AAC3DR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;;AACA,UAAIA,MAAM,CAACd,KAAX,EAAkB;AACjBM,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAd,QAAAA,SAAS,iCAAMD,MAAN;AAAcQ,UAAAA,KAAK,EAAEc,MAAM,CAACd;AAA5B,WAAT;AACA,OAHD,MAGO;AACNP,QAAAA,SAAS,iCACLD,MADK;AAERE,UAAAA,MAAM,EAAE,EAFA;AAGRC,UAAAA,YAAY,EAAE,EAHN;AAIRC,UAAAA,WAAW,EAAE,EAJL;AAKRC,UAAAA,IAAI,EAAE,EALE;AAMRC,UAAAA,OAAO,EAAE,IAND;AAORC,UAAAA,OAAO,EAAE;AAPD,WAAT;AASAgB,QAAAA,UAAU,CAAC,MAAM;AAChBhC,UAAAA,MAAM,CAACiC,IAAP,CAAY,uBAAZ;AACA,SAFS,EAEP,IAFO,CAAV;AAGA;AACD,KAnBD;AAoBA,GAvBD;;AAyBA,SACC,4BACC;AAAM,IAAA,QAAQ,EAAE1B,YAAY,CAACuB,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,EAIC;AACC,IAAA,GAAG,EAAExB,QAAQ,CAAC;AAAE4B,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CADd;AAEC,IAAA,IAAI,EAAC,cAFN,CAGC;AAHD;AAIC,IAAA,SAAS,EAAC,uBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,EAMEhB,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACV;AACC,IAAA,GAAG,EAAEA,CADN;AAEC,IAAA,KAAK,EAAED,IAAI,CAACE,IAFb;AAGC,IAAA,QAAQ,EACPF,IAAI,CAACE,IAAL,KAAc1B,YAAd,IACA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEwB,IAAI,CAACG,GAPP,CADA,CANF,CAJD,CADD,EAwBC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FADD,EAKC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,GAAG,EAAEjC,QAAQ,CAAC;AAAE4B,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHd,CAIC;AAJD;AAKC,IAAA,SAAS,EAAC,cALX;AAMC,IAAA,CAAC,MANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAxBD,EAsCC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AACC,IAAA,GAAG,EAAE5B,QAAQ,CAAC;AAAE4B,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CADd;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,SAAS,EAAC,uBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJD,EAKC;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALD,EAMC;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAND,EAOC;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPD,EAQC;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARD,EASC;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATD,CAFD,CAtCD,EAoDC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,aAFN;AAGC,IAAA,GAAG,EAAE5B,QAAQ,EAHd,CAIC;AAJD;AAKC,IAAA,SAAS,EAAC,cALX;AAMC,IAAA,IAAI,EAAC,IANN;AAOC,IAAA,IAAI,EAAC,GAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CApDD,CADD,CADD,EAmEES,OAAO,IACP,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEApEF,EAwEEC,OAAO,IACP;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAzEF,EA6EEC,KAAK,IAAI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CA7EX,EA8EC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,CA9ED,CADD,CADD;AAwFA,CAjKD,C,CAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAehB,UAAU,CAACC,gBAAD,CAAzB","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { listeOneReview, updateReview } from '../../../actions/reviewActions';\r\nimport { Spinner, Alert } from 'reactstrap';\r\nimport { listGitesNoms } from '../../../actions/giteActions';\r\nimport { getCookie } from '../../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nconst FormUpdateReview = ({ preloadedValues, router }) => {\r\n\tconst token = getCookie('token');\r\n\r\n\tconst { register, handleSubmit } = useForm({\r\n\t\tdefaultValues: preloadedValues,\r\n\t});\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tclient: '',\r\n\t\tgiteConcerne: '',\r\n\t\tcommentaire: '',\r\n\t\tnote: '',\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\tconst { success, loading, error, giteConcerne } = values;\r\n\tconst [gites, setGites] = useState([]);\r\n\r\n\tconst listDesGites = () => {\r\n\t\tlistGitesNoms().then((data) => {\r\n\t\t\tconsole.log('id', router.query.id);\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetGites(...gites, data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst listDetailReview = () => {\r\n\t\tconst ident = router.query.id;\r\n\t\tlisteOneReview(ident, token).then((data) => {\r\n\t\t\tconsole.log('data review vaut', data.giteConcerne);\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(data.error);\r\n\t\t\t} else {\r\n\t\t\t\tconst giteConc = data.giteConcerne;\r\n\t\t\t\tsetValues({ ...values, giteConcerne: giteConc });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlistDetailReview();\r\n\t\tlistDesGites();\r\n\t}, []);\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tupdateReview(data, router.query.id, token).then((result) => {\r\n\t\t\tconsole.log('result vaut =>', result);\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.log('une grosse erreur');\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tclient: '',\r\n\t\t\t\t\tgiteConcerne: '',\r\n\t\t\t\t\tcommentaire: '',\r\n\t\t\t\t\tnote: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionReviews');\r\n\t\t\t\t}, 3000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>\r\n\t\t\t\t\t\t\t\tSelection du gîte*\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\tname='giteConcerne'\r\n\t\t\t\t\t\t\t\t// value={giteConcerne}\r\n\t\t\t\t\t\t\t\tclassName='custom-select mr-sm-2'>\r\n\t\t\t\t\t\t\t\t<option value=''>Gîte...</option>\r\n\t\t\t\t\t\t\t\t{gites.map((gite, i) => (\r\n\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={gite.slug}\r\n\t\t\t\t\t\t\t\t\t\tselected={\r\n\t\t\t\t\t\t\t\t\t\t\tgite.slug === giteConcerne &&\r\n\t\t\t\t\t\t\t\t\t\t\t'selected'\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t{gite.nom}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>\r\n\t\t\t\t\t\t\t\tNom & première lettre du prénom du client (pour\r\n\t\t\t\t\t\t\t\tl'anonymat des commentaires)*\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='client'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={client}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tc\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Note sur 5 *</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tclassName='custom-select mr-sm-2'>\r\n\t\t\t\t\t\t\t\t<option value=''>Votre note...</option>\r\n\t\t\t\t\t\t\t\t<option value='1'>1 - Très mauvais</option>\r\n\t\t\t\t\t\t\t\t<option value='2'>2 - Mauvais</option>\r\n\t\t\t\t\t\t\t\t<option value='3'>3 - Moyen</option>\r\n\t\t\t\t\t\t\t\t<option value='4'>4 - Bon</option>\r\n\t\t\t\t\t\t\t\t<option value='5'>5 - Très bon</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Commentaire</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='commentaire'\r\n\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\t// value={commentaire}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='5'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<Alert color='success'>\r\n\t\t\t\t\t\tLa review a bien été modifiée, redirection en cours...\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <Alert color='success'>{error}</Alert>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit' className='btn btn-info'>\r\n\t\t\t\t\t\tModifier ce commentaire\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n// \tlisteOneReview().then((data) => {\r\n// \t\tif (data.error) {\r\n// \t\t\tconsole.log(data.error);\r\n// \t\t} else {\r\n// \t\t\treturn {\r\n// \t\t\t\tprops: {\r\n// \t\t\t\t\tgite: data,\r\n// \t\t\t\t},\r\n// \t\t\t};\r\n// \t\t}\r\n// \t});\r\n// }\r\n\r\nexport default withRouter(FormUpdateReview);\r\n"]},"metadata":{},"sourceType":"module"}