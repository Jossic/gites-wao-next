{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\nimport { getCookie } from '../actions/authActions';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { QRCreateReducer, QRDeleteReducer, QRListReducer, QRUpdateReducer } from '../reducers/giteReducers'; // create your reducer\n\nconst reducer = combineReducers({\n  QRList: QRListReducer,\n  QRDelete: QRDeleteReducer,\n  QRCreate: QRCreateReducer,\n  QRUpdate: QRUpdateReducer\n}); // (state = { tick: 'init' }, action) => {\n// \tswitch (action.type) {\n// \t\tcase HYDRATE:\n// \t\t\treturn { ...state, ...action.payload };\n// \t\tcase 'TICK':\n// \t\t\treturn { ...state, tick: action.payload };\n// \t\tdefault:\n// \t\t\treturn state;\n// \t}\n// };\n\nvar isNode = typeof module !== 'undefined';\nlet userInfoFromStorage = null;\n\nif (!isNode) {\n  userInfoFromStorage = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n}\n\nconst userTokenFromCookie = getCookie('token') ? JSON.parse(getCookie('token')) : null; // const userInfoFromStorage = localStorage.getItem('user')\n// \t? JSON.parse(localStorage.getItem('user'))\n// \t: null;\n\nconst initialState = {\n  userLogin: {\n    token: userTokenFromCookie,\n    user: userInfoFromStorage\n  }\n}; // create a makeStore function\n\nconst makeStore = context => createStore(reducer, initialState); // export an assembled wrapper\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/store.js"],"names":["createStore","combineReducers","createWrapper","HYDRATE","getCookie","composeWithDevTools","QRCreateReducer","QRDeleteReducer","QRListReducer","QRUpdateReducer","reducer","QRList","QRDelete","QRCreate","QRUpdate","isNode","module","userInfoFromStorage","localStorage","getItem","JSON","parse","userTokenFromCookie","initialState","userLogin","token","user","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,eADD,EAECC,eAFD,EAGCC,aAHD,EAICC,eAJD,QAKO,0BALP,C,CAOA;;AACA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC/BU,EAAAA,MAAM,EAAEH,aADuB;AAE/BI,EAAAA,QAAQ,EAAEL,eAFqB;AAG/BM,EAAAA,QAAQ,EAAEP,eAHqB;AAI/BQ,EAAAA,QAAQ,EAAEL;AAJqB,CAAD,CAA/B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIM,MAAM,GAAG,OAAOC,MAAP,KAAkB,WAA/B;AACA,IAAIC,mBAAmB,GAAG,IAA1B;;AACA,IAAI,CAACF,MAAL,EAAa;AACZE,EAAAA,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADmB,GAEnB,IAFH;AAGA;;AACD,MAAMG,mBAAmB,GAAGlB,SAAS,CAAC,OAAD,CAAT,GACzBgB,IAAI,CAACC,KAAL,CAAWjB,SAAS,CAAC,OAAD,CAApB,CADyB,GAEzB,IAFH,C,CAIA;AACA;AACA;;AAEA,MAAMmB,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,KAAK,EAAEH,mBAAT;AAA8BI,IAAAA,IAAI,EAAET;AAApC;AADS,CAArB,C,CAIA;;AACA,MAAMU,SAAS,GAAIC,OAAD,IAAa5B,WAAW,CAACU,OAAD,EAAUa,YAAV,CAA1C,C,CAEA;;;AACA,OAAO,MAAMM,OAAO,GAAG3B,aAAa,CAACyB,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\r\nimport { getCookie } from '../actions/authActions';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n\tQRCreateReducer,\r\n\tQRDeleteReducer,\r\n\tQRListReducer,\r\n\tQRUpdateReducer,\r\n} from '../reducers/giteReducers';\r\n\r\n// create your reducer\r\nconst reducer = combineReducers({\r\n\tQRList: QRListReducer,\r\n\tQRDelete: QRDeleteReducer,\r\n\tQRCreate: QRCreateReducer,\r\n\tQRUpdate: QRUpdateReducer,\r\n});\r\n\r\n// (state = { tick: 'init' }, action) => {\r\n// \tswitch (action.type) {\r\n// \t\tcase HYDRATE:\r\n// \t\t\treturn { ...state, ...action.payload };\r\n// \t\tcase 'TICK':\r\n// \t\t\treturn { ...state, tick: action.payload };\r\n// \t\tdefault:\r\n// \t\t\treturn state;\r\n// \t}\r\n// };\r\nvar isNode = typeof module !== 'undefined';\r\nlet userInfoFromStorage = null;\r\nif (!isNode) {\r\n\tuserInfoFromStorage = localStorage.getItem('user')\r\n\t\t? JSON.parse(localStorage.getItem('user'))\r\n\t\t: null;\r\n}\r\nconst userTokenFromCookie = getCookie('token')\r\n\t? JSON.parse(getCookie('token'))\r\n\t: null;\r\n\r\n// const userInfoFromStorage = localStorage.getItem('user')\r\n// \t? JSON.parse(localStorage.getItem('user'))\r\n// \t: null;\r\n\r\nconst initialState = {\r\n\tuserLogin: { token: userTokenFromCookie, user: userInfoFromStorage },\r\n};\r\n\r\n// create a makeStore function\r\nconst makeStore = (context) => createStore(reducer, initialState);\r\n\r\n// export an assembled wrapper\r\nexport const wrapper = createWrapper(makeStore, { debug: true });\r\n"]},"metadata":{},"sourceType":"module"}