{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\pages\\\\admin\\\\crud\\\\divers\\\\qr\\\\[id].js\";\nimport { useEffect, useState } from 'react';\nimport { listeOneQR } from '../../../../../actions/giteActions';\nimport FormUpdateQR from '../../../../../components/admin/FormUpdateQR';\nimport Admin from '../../../../../components/auth/Admin';\nimport AdminHeader from '../../../../../components/layout/AdminHeader';\nimport { withRouter } from 'next/router';\nimport { Spinner } from 'reactstrap';\n\nconst gestionPages = ({\n  router\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const token = getCookie('token');\n  useEffect(() => {\n    const fetchData = async () => {\n      setData(await listeOneQR(router.query.id, token));\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AdminHeader, {\n      children: /*#__PURE__*/_jsxDEV(Admin, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Formulaire de modification d'une question/r\\xE9ponse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), data ? /*#__PURE__*/_jsxDEV(FormUpdateQR, {\n          preloadedValues: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default withRouter(gestionPages);","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/pages/admin/crud/divers/qr/[id].js"],"names":["useEffect","useState","listeOneQR","FormUpdateQR","Admin","AdminHeader","withRouter","Spinner","gestionPages","router","data","setData","token","getCookie","fetchData","query","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMW,KAAK,GAAGC,SAAS,CAAC,OAAD,CAAvB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMc,SAAS,GAAG,YAAY;AAC7BH,MAAAA,OAAO,CAAC,MAAMT,UAAU,CAACO,MAAM,CAACM,KAAP,CAAaC,EAAd,EAAkBJ,KAAlB,CAAjB,CAAP;AACA,KAFD;;AAGAE,IAAAA,SAAS;AACT,GALQ,EAKN,EALM,CAAT;AAOA,sBACC;AAAA,2BACC,QAAC,WAAD;AAAA,6BACC,QAAC,KAAD;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEJ,IAAI,gBACJ,QAAC,YAAD;AAAc,UAAA,eAAe,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAcA,CAzBD;;AA2BA,eAAeJ,UAAU,CAACE,YAAD,CAAzB","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { listeOneQR } from '../../../../../actions/giteActions';\r\nimport FormUpdateQR from '../../../../../components/admin/FormUpdateQR';\r\nimport Admin from '../../../../../components/auth/Admin';\r\nimport AdminHeader from '../../../../../components/layout/AdminHeader';\r\nimport { withRouter } from 'next/router';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst gestionPages = ({ router }) => {\r\n\tconst [data, setData] = useState(null);\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tsetData(await listeOneQR(router.query.id, token));\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AdminHeader>\r\n\t\t\t\t<Admin>\r\n\t\t\t\t\t<h2>Formulaire de modification d'une question/r√©ponse</h2>\r\n\t\t\t\t\t{data ? (\r\n\t\t\t\t\t\t<FormUpdateQR preloadedValues={data} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Admin>\r\n\t\t\t</AdminHeader>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(gestionPages);\r\n"]},"metadata":{},"sourceType":"module"}