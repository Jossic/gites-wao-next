{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const createReservation = reservation => {\n  console.log('dans action', reservation);\n  return fetch(`${API}/reservation`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reservation)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listAllReservations = token => {\n  return fetch(`${API}/reservation`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listeOneReservation = (id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeReservation = (id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateReservation = (reservation, id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(reservation)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/reservationActions.js"],"names":["fetch","API","createReservation","reservation","console","log","method","headers","body","JSON","stringify","then","response","json","catch","err","listAllReservations","token","Authorization","listeOneReservation","id","removeReservation","updateReservation"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const createReservation = (reservation) => {\r\n\tconsole.log('dans action', reservation);\r\n\treturn fetch(`${API}/reservation`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(reservation),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listAllReservations = (token) => {\r\n\treturn fetch(`${API}/reservation`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listeOneReservation = (id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeReservation = (id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateReservation = (reservation, id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(reservation),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}