{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const ListAllPartenaires = () => {\n  return fetch(`${API}/divers/partenaires`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listePartenaireById = (id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createPartenaire = (partenaire, token) => {\n  return fetch(`${API}/divers/partenaire`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaire)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; // export const listReviewsBySlug = async (slug) => {\n// \ttry {\n// \t\tconst { data } = await axios.get(`${API}/reviews/${slug}`);\n// \t\t// console.log(data);\n// \t\treturn data;\n// \t} catch (error) {\n// \t\tconsole.error(error);\n// \t}\n// };\n\nexport const updatePartenaire = (partenaire, id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaire)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removePartenaire = (id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const ListAllPartenairesCards = () => {\n  return fetch(`${API}/divers/partenaires`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listePartenaireCardById = (id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createPartenaireCard = (partenaireCard, id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}/card`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaireCard)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updatePartenaireCard = (partenaire, id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(partenaire)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removePartenaireCard = (id, token) => {\n  return fetch(`${API}/divers/partenaire/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/partenairesActions.js"],"names":["fetch","API","ListAllPartenaires","method","then","response","json","catch","err","console","log","listePartenaireById","id","token","headers","Authorization","createPartenaire","partenaire","Accept","body","JSON","stringify","updatePartenaire","removePartenaire","ListAllPartenairesCards","listePartenaireCardById","createPartenaireCard","partenaireCard","updatePartenaireCard","removePartenaireCard"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const ListAllPartenaires = () => {\r\n\treturn fetch(`${API}/divers/partenaires`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireById = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaire = (partenaire, token) => {\r\n\treturn fetch(`${API}/divers/partenaire`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const listReviewsBySlug = async (slug) => {\r\n// \ttry {\r\n// \t\tconst { data } = await axios.get(`${API}/reviews/${slug}`);\r\n// \t\t// console.log(data);\r\n// \t\treturn data;\r\n// \t} catch (error) {\r\n// \t\tconsole.error(error);\r\n// \t}\r\n// };\r\n\r\nexport const updatePartenaire = (partenaire, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removePartenaire = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const ListAllPartenairesCards = () => {\r\n\treturn fetch(`${API}/divers/partenaires`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listePartenaireCardById = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPartenaireCard = (partenaireCard, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}/card`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaireCard),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePartenaireCard = (partenaire, id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(partenaire),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removePartenaireCard = (id, token) => {\r\n\treturn fetch(`${API}/divers/partenaire/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}