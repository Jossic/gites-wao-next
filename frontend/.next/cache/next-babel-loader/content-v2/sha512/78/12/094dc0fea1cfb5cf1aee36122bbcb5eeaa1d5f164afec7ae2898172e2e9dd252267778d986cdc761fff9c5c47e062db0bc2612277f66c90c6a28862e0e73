{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormUpdateQR.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { createQR, listeOneQR } from '../../actions/giteActions';\nimport { Spinner } from 'reactstrap';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\n\nconst FormUpdateQR = ({\n  router\n}) => {\n  const token = getCookie('token');\n  useEffect(() => {\n    initQR();\n    const {\n      register,\n      handleSubmit,\n      watch,\n      errors\n    } = useForm({\n      defaultValues: preloadedValues\n    });\n  }, [router]);\n\n  const initQR = params => {\n    const preloadedValues = {};\n\n    if (router.query.id) {\n      listeOneQR(router.query.id).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          preloadedValues = {\n            question: data.question,\n            reponse: data.reponse\n          }; // setValues({\n          // \t...values,\n          // \tquestion: data.question,\n          // \treponse: data.reponse,\n          // });\n        }\n      });\n    }\n  };\n\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    question: '',\n    reponse: '',\n    success: '',\n    loading: false,\n    error: ''\n  });\n  const {\n    question,\n    reponse,\n    success,\n    loading,\n    error\n  } = values;\n\n  const onSubmit = async data => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    console.log('data vaut =>', data);\n    updateQR(data, token).then(result => {\n      console.log('result vaut =>', result);\n\n      if (result.error) {\n        console.log('une grosse erreur');\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: result.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          question: '',\n          reponse: '',\n          success: true,\n          loading: false\n        }));\n        setTimeout(() => {\n          Router.push('/admin/gestionDivers/FAQ');\n        }, 2000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"question\",\n              ref: register({\n                required: true\n              }) // value={question}\n              ,\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"R\\xE9ponse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"reponse\",\n              ref: register({\n                required: true\n              }) // value={reponse}\n              ,\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"La question/r\\xE9ponse \\xE0 bien \\xE9t\\xE9 ajout\\xE9e, redirection en cours...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          children: \"Cr\\xE9er cette q/r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default withRouter(FormUpdateQR);","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormUpdateQR.js"],"names":["useEffect","useState","createQR","listeOneQR","Spinner","getCookie","useForm","Router","withRouter","FormUpdateQR","router","token","initQR","register","handleSubmit","watch","errors","defaultValues","preloadedValues","params","query","id","then","data","error","console","log","question","reponse","values","setValues","success","loading","onSubmit","updateQR","result","setTimeout","push","required"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { createQR, listeOneQR } from '../../actions/giteActions';\r\nimport { Spinner } from 'reactstrap';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nconst FormUpdateQR = ({ router }) => {\r\n\tconst token = getCookie('token');\r\n\r\n\tuseEffect(() => {\r\n\t\tinitQR();\r\n\t\tconst { register, handleSubmit, watch, errors } = useForm({\r\n\t\t\tdefaultValues: preloadedValues,\r\n\t\t});\r\n\t}, [router]);\r\n\r\n\tconst initQR = (params) => {\r\n\t\tconst preloadedValues = {};\r\n\t\tif (router.query.id) {\r\n\t\t\tlisteOneQR(router.query.id).then((data) => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tconsole.log(data.error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpreloadedValues = {\r\n\t\t\t\t\t\tquestion: data.question,\r\n\t\t\t\t\t\treponse: data.reponse,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// setValues({\r\n\t\t\t\t\t// \t...values,\r\n\t\t\t\t\t// \tquestion: data.question,\r\n\t\t\t\t\t// \treponse: data.reponse,\r\n\t\t\t\t\t// });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tquestion: '',\r\n\t\treponse: '',\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\tconst { question, reponse, success, loading, error } = values;\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tupdateQR(data, token).then((result) => {\r\n\t\t\tconsole.log('result vaut =>', result);\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.log('une grosse erreur');\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tquestion: '',\r\n\t\t\t\t\treponse: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionDivers/FAQ');\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Question</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='question'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={question}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='2'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Réponse</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='reponse'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\t// value={reponse}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='5'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\tLa question/réponse à bien été ajoutée, redirection en\r\n\t\t\t\t\t\tcours...\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <div className='alert alert-danger'>{error}</div>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit' className='btn btn-info'>\r\n\t\t\t\t\t\tCréer cette q/r\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(FormUpdateQR);\r\n"]},"metadata":{},"sourceType":"module"}