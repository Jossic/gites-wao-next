{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { QR_LIST_REQUEST, QR_LIST_SUCCESS, QR_LIST_FAIL // QR_DETAILS_REQUEST,\n// QR_DETAILS_SUCCESS,\n// QR_DETAILS_FAIL,\n, QR_DELETE_REQUEST, QR_DELETE_SUCCESS, QR_DELETE_FAIL, QR_CREATE_REQUEST, QR_CREATE_SUCCESS, QR_CREATE_FAIL, QR_UPDATE_REQUEST, QR_UPDATE_SUCCESS, QR_UPDATE_FAIL } from '../constants/giteConstants';\nexport var listGiteDetails = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(slug) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(API, \"/gite/\").concat(slug));\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function listGiteDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var listeDesGites = function listeDesGites() {\n  return fetch(\"\".concat(API, \"/gites\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listeDesImages = function listeDesImages(token) {\n  return fetch(\"\".concat(API, \"/photos\"), {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var saveImageData = function saveImageData(photos, nom, token) {\n  return fetch(\"\".concat(API, \"/upload-images/\").concat(nom), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(photos)\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listGitesNoms = function listGitesNoms() {\n  return fetch(\"\".concat(API, \"/gites/noms\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  }); // try {\n  // \tconst { data } = await axios.get(`${API}/gite`);\n  // \treturn data;\n  // } catch (error) {\n  // \tconsole.error(error);\n  // }\n};\nexport var createGite = function createGite(gite, token) {\n  return fetch(\"\".concat(API, \"/gite\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'multipart/form-data',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: gite\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var deleteGite = function deleteGite(slug, token) {\n  return fetch(\"\".concat(API, \"/gite/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateGite = function updateGite(gite, slug, token) {\n  return fetch(\"\".concat(API, \"/gite/\").concat(slug), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: gite\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var createQR = function createQR(qr, token) {\n  console.log('dan action', qr);\n  return fetch(\"\".concat(API, \"/qr\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(qr)\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // export const createQR = (token) => async (dispatch, getState) => {\n// \ttry {\n// \t\tdispatch({\n// \t\t\ttype: QR_CREATE_REQUEST,\n// \t\t});\n// \t\tconst {\n// \t\t\tuserToken: { userInfo },\n// \t\t} = getState();\n// \t\tconst config = {\n// \t\t\theaders: {\n// \t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n// \t\t\t},\n// \t\t};\n// \t\tconst { data } = await axios.post(`${API}/qr`, {}, config);\n// \t\tdispatch({\n// \t\t\ttype: QR_CREATE_SUCCESS,\n// \t\t\tpayload: data,\n// \t\t});\n// \t} catch (e) {\n// \t\tdispatch({\n// \t\t\ttype: QR_CREATE_FAIL,\n// \t\t\tpayload:\n// \t\t\t\te.response && e.response.data.message\n// \t\t\t\t\t? e.response.data.message\n// \t\t\t\t\t: e.message,\n// \t\t});\n// \t}\n// };\n\nexport var listeOneQR = function listeOneQR(id, token) {\n  return fetch(\"\".concat(API, \"/qr/\").concat(id), {\n    method: 'GET',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // export const listeDesQR = () => async (dispatch) => {\n// \ttry {\n// \t\tdispatch({ type: QR_LIST_REQUEST });\n// \t\tconst { data } = await axios.get(`${API}/qr`);\n// \t\tdispatch({\n// \t\t\ttype: QR_LIST_SUCCESS,\n// \t\t\tpayload: data,\n// \t\t});\n// \t} catch (error) {\n// \t\tdispatch({\n// \t\t\ttype: QR_LIST_FAIL,\n// \t\t\tpayload:\n// \t\t\t\terror.response && error.response.data.message\n// \t\t\t\t\t? error.response.data.message\n// \t\t\t\t\t: error.message,\n// \t\t});\n// \t}\n// };\n\nexport var listeDesQR = function listeDesQR() {\n  return fetch(\"\".concat(API, \"/qr\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeQR = function removeQR(id, token) {\n  return fetch(\"\".concat(API, \"/qr/\").concat(id), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateQR = function updateQR(qr, id, token) {\n  return fetch(\"\".concat(API, \"/qr/\").concat(id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(qr)\n  }).then(function (response) {\n    // handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/giteActions.js"],"names":["axios","fetch","API","QR_LIST_REQUEST","QR_LIST_SUCCESS","QR_LIST_FAIL","QR_DELETE_REQUEST","QR_DELETE_SUCCESS","QR_DELETE_FAIL","QR_CREATE_REQUEST","QR_CREATE_SUCCESS","QR_CREATE_FAIL","QR_UPDATE_REQUEST","QR_UPDATE_SUCCESS","QR_UPDATE_FAIL","listGiteDetails","slug","get","data","console","error","listeDesGites","method","then","response","json","err","log","listeDesImages","token","headers","Authorization","saveImageData","photos","nom","body","JSON","stringify","listGitesNoms","createGite","gite","Accept","deleteGite","updateGite","createQR","qr","listeOneQR","id","listeDesQR","removeQR","updateQR"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport {\r\n\tQR_LIST_REQUEST,\r\n\tQR_LIST_SUCCESS,\r\n\tQR_LIST_FAIL,\r\n\t// QR_DETAILS_REQUEST,\r\n\t// QR_DETAILS_SUCCESS,\r\n\t// QR_DETAILS_FAIL,\r\n\tQR_DELETE_REQUEST,\r\n\tQR_DELETE_SUCCESS,\r\n\tQR_DELETE_FAIL,\r\n\tQR_CREATE_REQUEST,\r\n\tQR_CREATE_SUCCESS,\r\n\tQR_CREATE_FAIL,\r\n\tQR_UPDATE_REQUEST,\r\n\tQR_UPDATE_SUCCESS,\r\n\tQR_UPDATE_FAIL,\r\n} from '../constants/giteConstants';\r\n\r\nexport const listGiteDetails = async (slug) => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${API}/gite/${slug}`);\r\n\t\t// console.log(data);\r\n\t\treturn data;\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n\r\nexport const listeDesGites = () => {\r\n\treturn fetch(`${API}/gites`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listeDesImages = (token) => {\r\n\treturn fetch(`${API}/photos`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const saveImageData = (photos, nom, token) => {\r\n\treturn fetch(`${API}/upload-images/${nom}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(photos),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listGitesNoms = () => {\r\n\treturn fetch(`${API}/gites/noms`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t// try {\r\n\t// \tconst { data } = await axios.get(`${API}/gite`);\r\n\t// \treturn data;\r\n\t// } catch (error) {\r\n\t// \tconsole.error(error);\r\n\t// }\r\n};\r\n\r\nexport const createGite = (gite, token) => {\r\n\treturn fetch(`${API}/gite`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'multipart/form-data',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: gite,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteGite = (slug, token) => {\r\n\treturn fetch(`${API}/gite/${slug}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateGite = (gite, slug, token) => {\r\n\treturn fetch(`${API}/gite/${slug}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: gite,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createQR = (qr, token) => {\r\n\tconsole.log('dan action', qr);\r\n\treturn fetch(`${API}/qr`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(qr),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const createQR = (token) => async (dispatch, getState) => {\r\n// \ttry {\r\n// \t\tdispatch({\r\n// \t\t\ttype: QR_CREATE_REQUEST,\r\n// \t\t});\r\n\r\n// \t\tconst {\r\n// \t\t\tuserToken: { userInfo },\r\n// \t\t} = getState();\r\n\r\n// \t\tconst config = {\r\n// \t\t\theaders: {\r\n// \t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n// \t\t\t},\r\n// \t\t};\r\n\r\n// \t\tconst { data } = await axios.post(`${API}/qr`, {}, config);\r\n\r\n// \t\tdispatch({\r\n// \t\t\ttype: QR_CREATE_SUCCESS,\r\n// \t\t\tpayload: data,\r\n// \t\t});\r\n// \t} catch (e) {\r\n// \t\tdispatch({\r\n// \t\t\ttype: QR_CREATE_FAIL,\r\n// \t\t\tpayload:\r\n// \t\t\t\te.response && e.response.data.message\r\n// \t\t\t\t\t? e.response.data.message\r\n// \t\t\t\t\t: e.message,\r\n// \t\t});\r\n// \t}\r\n// };\r\n\r\nexport const listeOneQR = (id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const listeDesQR = () => async (dispatch) => {\r\n// \ttry {\r\n// \t\tdispatch({ type: QR_LIST_REQUEST });\r\n\r\n// \t\tconst { data } = await axios.get(`${API}/qr`);\r\n\r\n// \t\tdispatch({\r\n// \t\t\ttype: QR_LIST_SUCCESS,\r\n// \t\t\tpayload: data,\r\n// \t\t});\r\n// \t} catch (error) {\r\n// \t\tdispatch({\r\n// \t\t\ttype: QR_LIST_FAIL,\r\n// \t\t\tpayload:\r\n// \t\t\t\terror.response && error.response.data.message\r\n// \t\t\t\t\t? error.response.data.message\r\n// \t\t\t\t\t: error.message,\r\n// \t\t});\r\n// \t}\r\n// };\r\n\r\nexport const listeDesQR = () => {\r\n\treturn fetch(`${API}/qr`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeQR = (id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateQR = (qr, id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(qr),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}