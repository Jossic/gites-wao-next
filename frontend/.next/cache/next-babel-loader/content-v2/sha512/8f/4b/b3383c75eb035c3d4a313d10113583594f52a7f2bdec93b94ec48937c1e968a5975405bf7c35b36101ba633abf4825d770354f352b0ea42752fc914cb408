{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\ListQR.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Table } from 'reactstrap';\nimport { listeDesQR, removeQR } from '../../actions/giteActions';\nimport { useEffect, useState } from 'react';\nimport { API } from '../../config';\nimport Link from 'next/link';\nimport { getCookie } from '../../actions/authActions';\n\nconst ListGites = () => {\n  const {\n    0: QRs,\n    1: setQRs\n  } = useState([]);\n  const {\n    0: values,\n    1: setvalues\n  } = useState({\n    loading: false,\n    error: '',\n    success: ''\n  });\n  const {\n    loading,\n    error,\n    success\n  } = values;\n  const token = getCookie('token');\n\n  const listerLesQR = () => {\n    listeDesQR(token).then(data => {\n      if (data.error) {\n        console.log(error);\n      } else {\n        setQRs(...QRs, data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    listerLesQR();\n  }, []);\n\n  const deleteQR = id => {\n    setvalues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    removeQR(id, token).then(data => {\n      if (data.error) {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: true,\n          success: false\n        }));\n      } else {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: '',\n          success: true\n        }));\n      }\n    });\n  };\n\n  const deleteConfirm = id => {\n    let answer = window.confirm('Cette opération est irréversible, Etes-vous sur de vouloir supprimer cet article ?');\n\n    if (answer) {\n      deleteQR(id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"R\\xE9ponse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: QRs.map(QR => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: QR.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: QR.reponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: `/admin/crud/gite/${QR._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-pencil-ruler\",\n                  style: {\n                    color: 'orange'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: () => deleteConfirm(QR._id),\n              class: \"fas fa-trash-alt\",\n              style: {\n                color: 'red',\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default ListGites;","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/ListQR.js"],"names":["Table","listeDesQR","removeQR","useEffect","useState","API","Link","getCookie","ListGites","QRs","setQRs","values","setvalues","loading","error","success","token","listerLesQR","then","data","console","log","deleteQR","id","deleteConfirm","answer","window","confirm","map","QR","question","reponse","_id","color","cursor"],"mappings":"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","sourcesContent":["import { Table } from 'reactstrap';\r\nimport { listeDesQR, removeQR } from '../../actions/giteActions';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../../config';\r\nimport Link from 'next/link';\r\nimport { getCookie } from '../../actions/authActions';\r\n\r\nconst ListGites = () => {\r\n\tconst [QRs, setQRs] = useState([]);\r\n\r\n\tconst [values, setvalues] = useState({\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t\tsuccess: '',\r\n\t});\r\n\r\n\tconst { loading, error, success } = values;\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst listerLesQR = () => {\r\n\t\tlisteDesQR(token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetQRs(...QRs, data);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlisterLesQR();\r\n\t}, []);\r\n\r\n\tconst deleteQR = (id) => {\r\n\t\tsetvalues({ ...values, loading: true });\r\n\t\tremoveQR(id, token).then((data) => {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteConfirm = (id) => {\r\n\t\tlet answer = window.confirm(\r\n\t\t\t'Cette opération est irréversible, Etes-vous sur de vouloir supprimer cet article ?'\r\n\t\t);\r\n\t\tif (answer) {\r\n\t\t\tdeleteQR(id);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Question</th>\r\n\t\t\t\t\t\t<th>Réponse</th>\r\n\r\n\t\t\t\t\t\t<th colSpan='2'>Actions</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{QRs.map((QR) => (\r\n\t\t\t\t\t\t<tr className='mt-5'>\r\n\t\t\t\t\t\t\t<th>{QR.question}</th>\r\n\t\t\t\t\t\t\t<th>{QR.reponse}</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<Link href={`/admin/crud/gite/${QR._id}`}>\r\n\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclass='fas fa-pencil-ruler'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange' }}></i>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteConfirm(QR._id)}\r\n\t\t\t\t\t\t\t\t\tclass='fas fa-trash-alt'\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t}}></i>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ListGites;\r\n"]},"metadata":{},"sourceType":"module"}