{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\FormUpdateQR.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { updateQR } from '../../actions/giteActions';\nimport { Spinner } from 'reactstrap';\nimport { getCookie } from '../../actions/authActions';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\n\nvar FormUpdateQR = function FormUpdateQR(_ref) {\n  _s();\n\n  var preloadedValues = _ref.preloadedValues,\n      router = _ref.router;\n  var token = getCookie('token');\n\n  var _useForm = useForm({\n    defaultValues: preloadedValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useState = useState({\n    question: '',\n    reponse: '',\n    success: '',\n    loading: false,\n    error: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var success = values.success,\n      loading = values.loading,\n      error = values.error;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                loading: true\n              }));\n              console.log('data vaut =>', data);\n              updateQR(data, router.query.id, token).then(function (result) {\n                console.log('result vaut =>', result);\n\n                if (result.error) {\n                  console.log('une grosse erreur');\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    error: result.error\n                  }));\n                } else {\n                  setValues(_objectSpread(_objectSpread({}, values), {}, {\n                    question: '',\n                    reponse: '',\n                    success: true,\n                    loading: false\n                  }));\n                  setTimeout(function () {\n                    Router.push('/admin/gestionDivers/FAQ');\n                  }, 2000);\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"question\",\n              ref: register({\n                required: true\n              }),\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-muted\",\n              children: \"R\\xE9ponse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"reponse\",\n              ref: register({\n                required: true\n              }),\n              className: \"form-control\",\n              cols: \"30\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, _this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"La question/r\\xE9ponse \\xE0 bien \\xE9t\\xE9 modifi\\xE9e, redirection en cours...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, _this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          children: \"Modifier cette q/r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(FormUpdateQR, \"Qge4TU7vh0xQLVEU45KK99nMvnM=\", false, function () {\n  return [useForm];\n});\n\n_c = FormUpdateQR;\nexport default _c2 = withRouter(FormUpdateQR);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormUpdateQR\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/FormUpdateQR.js"],"names":["useEffect","useState","updateQR","Spinner","getCookie","useForm","Router","withRouter","FormUpdateQR","preloadedValues","router","token","defaultValues","register","handleSubmit","question","reponse","success","loading","error","values","setValues","onSubmit","data","console","log","query","id","then","result","setTimeout","push","required"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { updateQR } from '../../actions/giteActions';\r\nimport { Spinner } from 'reactstrap';\r\nimport { getCookie } from '../../actions/authActions';\r\nimport { useForm } from 'react-hook-form';\r\nimport Router from 'next/router';\r\nimport { withRouter } from 'next/router';\r\n\r\nconst FormUpdateQR = ({ preloadedValues, router }) => {\r\n\tconst token = getCookie('token');\r\n\r\n\tconst { register, handleSubmit } = useForm({\r\n\t\tdefaultValues: preloadedValues,\r\n\t});\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tquestion: '',\r\n\t\treponse: '',\r\n\t\tsuccess: '',\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t});\r\n\tconst { success, loading, error } = values;\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\tsetValues({ ...values, loading: true });\r\n\t\tconsole.log('data vaut =>', data);\r\n\t\tupdateQR(data, router.query.id, token).then((result) => {\r\n\t\t\tconsole.log('result vaut =>', result);\r\n\t\t\tif (result.error) {\r\n\t\t\t\tconsole.log('une grosse erreur');\r\n\t\t\t\tsetValues({ ...values, error: result.error });\r\n\t\t\t} else {\r\n\t\t\t\tsetValues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tquestion: '',\r\n\t\t\t\t\treponse: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tRouter.push('/admin/gestionDivers/FAQ');\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Question</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='question'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='2'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label className='text-muted'>Réponse</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='reponse'\r\n\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\trows='5'></textarea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{success && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\tLa question/réponse à bien été modifiée, redirection en\r\n\t\t\t\t\t\tcours...\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<div className='alert alert-success'>\r\n\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <div className='alert alert-danger'>{error}</div>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit' className='btn btn-info'>\r\n\t\t\t\t\t\tModifier cette q/r\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(FormUpdateQR);\r\n"]},"metadata":{},"sourceType":"module"}