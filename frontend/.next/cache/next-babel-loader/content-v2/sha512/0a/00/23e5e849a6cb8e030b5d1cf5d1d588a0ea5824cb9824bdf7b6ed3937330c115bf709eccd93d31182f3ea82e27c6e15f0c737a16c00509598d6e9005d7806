{"ast":null,"code":"import axios from 'axios';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { QR_LIST_REQUEST, QR_LIST_SUCCESS, QR_LIST_FAIL // QR_DETAILS_REQUEST,\n// QR_DETAILS_SUCCESS,\n// QR_DETAILS_FAIL,\n, QR_DELETE_REQUEST, QR_DELETE_SUCCESS, QR_DELETE_FAIL, QR_CREATE_REQUEST, QR_CREATE_SUCCESS, QR_CREATE_FAIL, QR_UPDATE_REQUEST, QR_UPDATE_SUCCESS, QR_UPDATE_FAIL } from '../constants/giteConstants';\nexport const listGiteDetails = async slug => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API}/gite/${slug}`); // console.log(data);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const listeDesGites = () => {\n  return fetch(`${API}/gites`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listeDesImages = token => {\n  return fetch(`${API}/photos`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listGitesNoms = () => {\n  return fetch(`${API}/gites/noms`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err)); // try {\n  // \tconst { data } = await axios.get(`${API}/gite`);\n  // \treturn data;\n  // } catch (error) {\n  // \tconsole.error(error);\n  // }\n};\nexport const createGite = (gite, token) => {\n  return fetch(`${API}/gite`, {\n    method: 'POST',\n    headers: {\n      Accept: 'multipart/form-data',\n      Authorization: `Bearer ${token}`\n    },\n    body: gite\n  }).then(response => {\n    // handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteGite = (slug, token) => {\n  return fetch(`${API}/gite/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    // handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateGite = (gite, slug, token) => {\n  return fetch(`${API}/gite/${slug}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: gite\n  }).then(response => {\n    // handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n}; // export const createQR = (qr, token) => {\n// \tconsole.log('dan action', qr);\n// \treturn fetch(`${API}/qr`, {\n// \t\tmethod: 'POST',\n// \t\theaders: {\n// \t\t\tAccept: 'application/json',\n// \t\t\t'Content-Type': 'application/json',\n// \t\t\tAuthorization: `Bearer ${token}`,\n// \t\t},\n// \t\tbody: JSON.stringify(qr),\n// \t})\n// \t\t.then((response) => {\n// \t\t\t// handleResponse(response);\n// \t\t\treturn response.json();\n// \t\t})\n// \t\t.catch((err) => console.log(err));\n// };\n\nexport const createQR = token => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: QR_CREATE_REQUEST\n    });\n    const {\n      userToken: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API}/qr`, {}, config);\n    dispatch({\n      type: QR_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: QR_CREATE_FAIL,\n      payload: e.response && e.response.data.message ? e.response.data.message : e.message\n    });\n  }\n};\nexport const listeOneQR = (id, token) => {\n  return fetch(`${API}/qr/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listeDesQR = () => async dispatch => {\n  try {\n    dispatch({\n      type: QR_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${API}/qr`);\n    dispatch({\n      type: QR_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: QR_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const listeDesQR = () => {\n// \treturn fetch(`${API}/qr`, {\n// \t\tmethod: 'GET',\n// \t})\n// \t\t.then((response) => {\n// \t\t\treturn response.json();\n// \t\t})\n// \t\t.catch((err) => console.log(err));\n// };\n\nexport const removeQR = (id, token) => {\n  return fetch(`${API}/qr/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateQR = (qr, id, token) => {\n  return fetch(`${API}/qr/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(qr)\n  }).then(response => {\n    // handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/giteActions.js"],"names":["axios","fetch","API","QR_LIST_REQUEST","QR_LIST_SUCCESS","QR_LIST_FAIL","QR_DELETE_REQUEST","QR_DELETE_SUCCESS","QR_DELETE_FAIL","QR_CREATE_REQUEST","QR_CREATE_SUCCESS","QR_CREATE_FAIL","QR_UPDATE_REQUEST","QR_UPDATE_SUCCESS","QR_UPDATE_FAIL","listGiteDetails","slug","data","get","error","console","listeDesGites","method","then","response","json","catch","err","log","listeDesImages","token","headers","Authorization","listGitesNoms","createGite","gite","Accept","body","deleteGite","updateGite","createQR","dispatch","getState","type","userToken","userInfo","config","post","payload","e","message","listeOneQR","id","listeDesQR","removeQR","updateQR","qr","JSON","stringify"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport {\r\n\tQR_LIST_REQUEST,\r\n\tQR_LIST_SUCCESS,\r\n\tQR_LIST_FAIL,\r\n\t// QR_DETAILS_REQUEST,\r\n\t// QR_DETAILS_SUCCESS,\r\n\t// QR_DETAILS_FAIL,\r\n\tQR_DELETE_REQUEST,\r\n\tQR_DELETE_SUCCESS,\r\n\tQR_DELETE_FAIL,\r\n\tQR_CREATE_REQUEST,\r\n\tQR_CREATE_SUCCESS,\r\n\tQR_CREATE_FAIL,\r\n\tQR_UPDATE_REQUEST,\r\n\tQR_UPDATE_SUCCESS,\r\n\tQR_UPDATE_FAIL,\r\n} from '../constants/giteConstants';\r\n\r\nexport const listGiteDetails = async (slug) => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${API}/gite/${slug}`);\r\n\t\t// console.log(data);\r\n\t\treturn data;\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n\r\nexport const listeDesGites = () => {\r\n\treturn fetch(`${API}/gites`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listeDesImages = (token) => {\r\n\treturn fetch(`${API}/photos`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listGitesNoms = () => {\r\n\treturn fetch(`${API}/gites/noms`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n\r\n\t// try {\r\n\t// \tconst { data } = await axios.get(`${API}/gite`);\r\n\t// \treturn data;\r\n\t// } catch (error) {\r\n\t// \tconsole.error(error);\r\n\t// }\r\n};\r\n\r\nexport const createGite = (gite, token) => {\r\n\treturn fetch(`${API}/gite`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'multipart/form-data',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: gite,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteGite = (slug, token) => {\r\n\treturn fetch(`${API}/gite/${slug}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateGite = (gite, slug, token) => {\r\n\treturn fetch(`${API}/gite/${slug}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: gite,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\n// export const createQR = (qr, token) => {\r\n// \tconsole.log('dan action', qr);\r\n// \treturn fetch(`${API}/qr`, {\r\n// \t\tmethod: 'POST',\r\n// \t\theaders: {\r\n// \t\t\tAccept: 'application/json',\r\n// \t\t\t'Content-Type': 'application/json',\r\n// \t\t\tAuthorization: `Bearer ${token}`,\r\n// \t\t},\r\n// \t\tbody: JSON.stringify(qr),\r\n// \t})\r\n// \t\t.then((response) => {\r\n// \t\t\t// handleResponse(response);\r\n// \t\t\treturn response.json();\r\n// \t\t})\r\n// \t\t.catch((err) => console.log(err));\r\n// };\r\n\r\nexport const createQR = (token) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: QR_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserToken: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`${API}/qr`, {}, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: QR_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: QR_CREATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\te.response && e.response.data.message\r\n\t\t\t\t\t? e.response.data.message\r\n\t\t\t\t\t: e.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listeOneQR = (id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listeDesQR = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: QR_LIST_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`${API}/qr`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: QR_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: QR_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// export const listeDesQR = () => {\r\n// \treturn fetch(`${API}/qr`, {\r\n// \t\tmethod: 'GET',\r\n// \t})\r\n// \t\t.then((response) => {\r\n// \t\t\treturn response.json();\r\n// \t\t})\r\n// \t\t.catch((err) => console.log(err));\r\n// };\r\n\r\nexport const removeQR = (id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateQR = (qr, id, token) => {\r\n\treturn fetch(`${API}/qr/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(qr),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// handleResponse(response);\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}