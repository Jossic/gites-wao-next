{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var listAllMessages = function listAllMessages() {\n  return fetch(\"\".concat(API, \"/message\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listMessageById = function listMessageById(id) {\n  return fetch(\"\".concat(API, \"/message/\").concat(id), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var countMessageNonLus = function countMessageNonLus() {\n  return fetch(\"\".concat(API, \"/message/count\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var createMessage = function createMessage(message) {\n  console.log('dans action', message);\n  return fetch(\"\".concat(API, \"/message\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(message)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeMessage = function removeMessage(id, token) {\n  return fetch(\"\".concat(API, \"/message/\").concat(id), {\n    method: 'DELETE',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateMessage = function updateMessage(message, id, token) {\n  return fetch(\"\".concat(API, \"/review/\").concat(id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(message)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/messageActions.js"],"names":["fetch","API","listAllMessages","method","then","response","json","err","console","log","listMessageById","id","countMessageNonLus","createMessage","message","headers","body","JSON","stringify","removeMessage","token","Authorization","updateMessage"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listAllMessages = () => {\r\n\treturn fetch(`${API}/message`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listMessageById = (id) => {\r\n\treturn fetch(`${API}/message/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const countMessageNonLus = () => {\r\n\treturn fetch(`${API}/message/count`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createMessage = (message) => {\r\n\tconsole.log('dans action', message);\r\n\treturn fetch(`${API}/message`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(message),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeMessage = (id, token) => {\r\n\treturn fetch(`${API}/message/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateMessage = (message, id, token) => {\r\n\treturn fetch(`${API}/review/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(message),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}