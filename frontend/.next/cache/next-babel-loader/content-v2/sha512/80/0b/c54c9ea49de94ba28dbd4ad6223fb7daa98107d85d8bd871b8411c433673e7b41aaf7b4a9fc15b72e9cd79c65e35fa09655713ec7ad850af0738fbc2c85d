{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// import { listeOneReview } from '../../../../../actions/reviewActions';\n// import FormUpdateReview from '../../../../../components/admin/forms/FormUpdateReview';\n// import Admin from '../../../../../components/auth/Admin';\n// import AdminHeader from '../../../../../components/layout/AdminHeader';\n// import { withRouter } from 'next/router';\n// import { Spinner } from 'reactstrap';\n// import { getCookie } from '../../../../../actions/authActions';\n// const gestionPages = ({ router }) => {\n// \tconst [data, setData] = useState(null);\n// \tconst token = getCookie('token');\n// \tuseEffect(() => {\n// \t\tconst fetchData = async () => {\n// \t\t\tsetData(await listeOneReview(router.query.id, token));\n// \t\t};\n// \t\tfetchData();\n// \t}, []);\n// \treturn (\n// \t\t<>\n// \t\t\t<AdminHeader>\n// \t\t\t\t<Admin>\n// \t\t\t\t\t<h2>Formulaire de modification d'une review</h2>\n// \t\t\t\t\t{data ? (\n// \t\t\t\t\t\t<FormUpdateReview preloadedValues={data} />\n// \t\t\t\t\t) : (\n// \t\t\t\t\t\t<Spinner />\n// \t\t\t\t\t)}\n// \t\t\t\t</Admin>\n// \t\t\t</AdminHeader>\n// \t\t</>\n// \t);\n// };\n// export default withRouter(gestionPages);","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/pages/admin/crud/divers/partenaire/[id].js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import { listeOneReview } from '../../../../../actions/reviewActions';\r\n// import FormUpdateReview from '../../../../../components/admin/forms/FormUpdateReview';\r\n// import Admin from '../../../../../components/auth/Admin';\r\n// import AdminHeader from '../../../../../components/layout/AdminHeader';\r\n// import { withRouter } from 'next/router';\r\n// import { Spinner } from 'reactstrap';\r\n// import { getCookie } from '../../../../../actions/authActions';\r\n\r\n// const gestionPages = ({ router }) => {\r\n// \tconst [data, setData] = useState(null);\r\n// \tconst token = getCookie('token');\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconst fetchData = async () => {\r\n// \t\t\tsetData(await listeOneReview(router.query.id, token));\r\n// \t\t};\r\n// \t\tfetchData();\r\n// \t}, []);\r\n\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<AdminHeader>\r\n// \t\t\t\t<Admin>\r\n// \t\t\t\t\t<h2>Formulaire de modification d'une review</h2>\r\n// \t\t\t\t\t{data ? (\r\n// \t\t\t\t\t\t<FormUpdateReview preloadedValues={data} />\r\n// \t\t\t\t\t) : (\r\n// \t\t\t\t\t\t<Spinner />\r\n// \t\t\t\t\t)}\r\n// \t\t\t\t</Admin>\r\n// \t\t\t</AdminHeader>\r\n// \t\t</>\r\n// \t);\r\n// };\r\n\r\n// export default withRouter(gestionPages);\r\n"]},"metadata":{},"sourceType":"script"}