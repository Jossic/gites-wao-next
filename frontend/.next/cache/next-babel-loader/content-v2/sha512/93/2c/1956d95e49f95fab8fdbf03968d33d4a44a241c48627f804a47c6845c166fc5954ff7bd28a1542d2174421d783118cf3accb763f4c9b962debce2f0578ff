{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore } from 'redux';\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\nimport { getCookie } from '../actions/authActions'; // create your reducer\n\nconst reducer = (state = {\n  tick: 'init'\n}, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'TICK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tick: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst userInfoFromStorage = getCookie('token') ? JSON.parse(getCookie('token')) : null;\nconst initialState = {\n  userLogin: {\n    token: userInfoFromStorage\n  }\n}; // create a makeStore function\n\nconst makeStore = context => createStore(reducer, initialState); // export an assembled wrapper\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/store.js"],"names":["createStore","createWrapper","HYDRATE","getCookie","reducer","state","tick","action","type","payload","userInfoFromStorage","JSON","parse","initialState","userLogin","token","makeStore","context","wrapper","debug"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,EAA2BC,MAA3B,KAAsC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,OAAL;AACC,6CAAYG,KAAZ,GAAsBE,MAAM,CAACE,OAA7B;;AACD,SAAK,MAAL;AACC,6CAAYJ,KAAZ;AAAmBC,QAAAA,IAAI,EAAEC,MAAM,CAACE;AAAhC;;AACD;AACC,aAAOJ,KAAP;AANF;AAQA,CATD;;AAWA,MAAMK,mBAAmB,GAAGP,SAAS,CAAC,OAAD,CAAT,GACzBQ,IAAI,CAACC,KAAL,CAAWT,SAAS,CAAC,OAAD,CAApB,CADyB,GAEzB,IAFH;AAIA,MAAMU,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,KAAK,EAAEL;AAAT;AADS,CAArB,C,CAIA;;AACA,MAAMM,SAAS,GAAIC,OAAD,IAAajB,WAAW,CAACI,OAAD,EAAUS,YAAV,CAA1C,C,CAEA;;;AACA,OAAO,MAAMK,OAAO,GAAGjB,aAAa,CAACe,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore } from 'redux';\r\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper';\r\nimport { getCookie } from '../actions/authActions';\r\n\r\n// create your reducer\r\nconst reducer = (state = { tick: 'init' }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase HYDRATE:\r\n\t\t\treturn { ...state, ...action.payload };\r\n\t\tcase 'TICK':\r\n\t\t\treturn { ...state, tick: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst userInfoFromStorage = getCookie('token')\r\n\t? JSON.parse(getCookie('token'))\r\n\t: null;\r\n\r\nconst initialState = {\r\n\tuserLogin: { token: userInfoFromStorage },\r\n};\r\n\r\n// create a makeStore function\r\nconst makeStore = (context) => createStore(reducer, initialState);\r\n\r\n// export an assembled wrapper\r\nexport const wrapper = createWrapper(makeStore, { debug: true });\r\n"]},"metadata":{},"sourceType":"module"}