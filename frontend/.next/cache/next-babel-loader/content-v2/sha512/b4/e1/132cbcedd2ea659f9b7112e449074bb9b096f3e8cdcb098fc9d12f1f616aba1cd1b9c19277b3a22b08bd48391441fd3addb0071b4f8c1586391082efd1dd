{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var listAllMailers = function listAllMailers() {\n  return fetch(\"\".concat(API, \"/mailer\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listMailerById = function listMailerById(id) {\n  return fetch(\"\".concat(API, \"/mailer/\").concat(id), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var createMailer = function createMailer(mailer) {\n  return fetch(\"\".concat(API, \"/mailer\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(mailer)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeMailer = function removeMailer(id, token) {\n  return fetch(\"\".concat(API, \"/mailer/\").concat(id), {\n    method: 'DELETE',\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateMailer = function updateMailer(response, id, token) {\n  return fetch(\"\".concat(API, \"/mailer/\").concat(id), {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(response)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/mailerActions.js"],"names":["fetch","API","listAllMailers","method","then","response","json","err","console","log","listMailerById","id","createMailer","mailer","headers","body","JSON","stringify","removeMailer","token","Authorization","updateMailer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACnC,SAAOF,KAAK,WAAIC,GAAJ,cAAkB;AAC7BE,IAAAA,MAAM,EAAE;AADqB,GAAlB,CAAL,CAGLC,IAHK,CAGA,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GALK,WAMC,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAND,CAAP;AAOA,CARM;AAUP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;AACrC,SAAOX,KAAK,WAAIC,GAAJ,qBAAkBU,EAAlB,GAAwB;AACnCR,IAAAA,MAAM,EAAE;AAD2B,GAAxB,CAAL,CAGLC,IAHK,CAGA,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GALK,WAMC,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAND,CAAP;AAOA,CARM;AAUP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACvC,SAAOb,KAAK,WAAIC,GAAJ,cAAkB;AAC7BE,IAAAA,MAAM,EAAE,MADqB;AAE7BW,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFoB;AAK7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AALuB,GAAlB,CAAL,CAOLT,IAPK,CAOA,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GATK,WAUC,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAVD,CAAP;AAWA,CAZM;AAcP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAACP,EAAD,EAAKQ,KAAL,EAAe;AAC1C,SAAOnB,KAAK,WAAIC,GAAJ,qBAAkBU,EAAlB,GAAwB;AACnCR,IAAAA,MAAM,EAAE,QAD2B;AAEnCW,IAAAA,OAAO,EAAE;AACRM,MAAAA,aAAa,mBAAYD,KAAZ;AADL;AAF0B,GAAxB,CAAL,CAMLf,IANK,CAMA,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GARK,WASC,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GATD,CAAP;AAUA,CAXM;AAaP,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAAChB,QAAD,EAAWM,EAAX,EAAeQ,KAAf,EAAyB;AACpD,SAAOnB,KAAK,WAAIC,GAAJ,qBAAkBU,EAAlB,GAAwB;AACnCR,IAAAA,MAAM,EAAE,KAD2B;AAEnCW,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAERM,MAAAA,aAAa,mBAAYD,KAAZ;AAFL,KAF0B;AAMnCJ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AAN6B,GAAxB,CAAL,CAQLD,IARK,CAQA,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GAVK,WAWC,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAXD,CAAP;AAYA,CAbM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const listAllMailers = () => {\r\n\treturn fetch(`${API}/mailer`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listMailerById = (id) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const createMailer = (mailer) => {\r\n\treturn fetch(`${API}/mailer`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(mailer),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeMailer = (id, token) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateMailer = (response, id, token) => {\r\n\treturn fetch(`${API}/mailer/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(response),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}