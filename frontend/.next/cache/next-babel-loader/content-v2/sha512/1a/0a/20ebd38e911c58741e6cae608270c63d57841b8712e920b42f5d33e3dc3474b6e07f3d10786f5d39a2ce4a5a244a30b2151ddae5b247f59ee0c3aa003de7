{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Quill = dynamic(_c = function _c() {\n  return import('react-quill');\n}, {\n  ssr: false\n});\n_c2 = Quill;\nvar Inline = Quill[\"import\"]('blots/inline');\n\nvar BoldBlot = /*#__PURE__*/function (_Inline) {\n  _inherits(BoldBlot, _Inline);\n\n  var _super = _createSuper(BoldBlot);\n\n  function BoldBlot() {\n    _classCallCheck(this, BoldBlot);\n\n    return _super.apply(this, arguments);\n  }\n\n  return BoldBlot;\n}(Inline);\n\nBoldBlot.blotName = 'bold';\nBoldBlot.tagName = 'strong';\nQuill.register('formats/bold', BoldBlot);\nexport var QuillModules = {\n  toolbar: [[// { header: '1' },\n  // { header: '2' },\n  {\n    header: [1, 2, 3, 4, 5, 6]\n  }, {\n    font: []\n  }], [{\n    size: [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], ['link', 'image', 'video'], // ['clean'],\n  ['code-block'], ['code'] // ['✔'],\n  ]\n};\nexport var QuillFormats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'link', 'image', 'video', 'code-block', 'code' // '✔',\n];\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Quill$dynamic\");\n$RefreshReg$(_c2, \"Quill\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/util/quill.js"],"names":["Quill","dynamic","ssr","Inline","BoldBlot","blotName","tagName","register","QuillModules","toolbar","header","font","size","list","QuillFormats"],"mappings":";;;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,MAAC;AAAA,SAAM,OAAO,aAAP,CAAN;AAAA,CAAD,EAA8B;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAA9B,CAArB;MAAMF,K;AACN,IAAIG,MAAM,GAAGH,KAAK,UAAL,CAAa,cAAb,CAAb;;IACMI,Q;;;;;;;;;;;;EAAiBD,M;;AACvBC,QAAQ,CAACC,QAAT,GAAoB,MAApB;AACAD,QAAQ,CAACE,OAAT,GAAmB,QAAnB;AACAN,KAAK,CAACO,QAAN,CAAe,cAAf,EAA+BH,QAA/B;AAEA,OAAO,IAAMI,YAAY,GAAG;AAC3BC,EAAAA,OAAO,EAAE,CACR,CACC;AACA;AACA;AAAEC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AAAV,GAHD,EAIC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAJD,CADQ,EAOR,CAAC;AAAEC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C;AAAR,GAAD,CAPQ,EAQR,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CARQ,EASR,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAsB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAtB,CATQ,EAUR,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVQ,EAWR;AACA,GAAC,YAAD,CAZQ,EAaR,CAAC,MAAD,CAbQ,CAcR;AAdQ;AADkB,CAArB;AAmBP,OAAO,IAAMC,YAAY,GAAG,CAC3B,QAD2B,EAE3B,MAF2B,EAG3B,MAH2B,EAI3B,MAJ2B,EAK3B,QAL2B,EAM3B,WAN2B,EAO3B,QAP2B,EAQ3B,YAR2B,EAS3B,MAT2B,EAU3B,QAV2B,EAW3B,MAX2B,EAY3B,OAZ2B,EAa3B,OAb2B,EAc3B,YAd2B,EAe3B,MAf2B,CAgB3B;AAhB2B,CAArB","sourcesContent":["const Quill = dynamic(() => import('react-quill'), { ssr: false });\r\nlet Inline = Quill.import('blots/inline');\r\nclass BoldBlot extends Inline {}\r\nBoldBlot.blotName = 'bold';\r\nBoldBlot.tagName = 'strong';\r\nQuill.register('formats/bold', BoldBlot);\r\n\r\nexport const QuillModules = {\r\n\ttoolbar: [\r\n\t\t[\r\n\t\t\t// { header: '1' },\r\n\t\t\t// { header: '2' },\r\n\t\t\t{ header: [1, 2, 3, 4, 5, 6] },\r\n\t\t\t{ font: [] },\r\n\t\t],\r\n\t\t[{ size: [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30] }],\r\n\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t['link', 'image', 'video'],\r\n\t\t// ['clean'],\r\n\t\t['code-block'],\r\n\t\t['code'],\r\n\t\t// ['✔'],\r\n\t],\r\n};\r\n\r\nexport const QuillFormats = [\r\n\t'header',\r\n\t'font',\r\n\t'size',\r\n\t'bold',\r\n\t'italic',\r\n\t'underline',\r\n\t'strike',\r\n\t'blockquote',\r\n\t'list',\r\n\t'bullet',\r\n\t'link',\r\n\t'image',\r\n\t'video',\r\n\t'code-block',\r\n\t'code',\r\n\t// '✔',\r\n];\r\n"]},"metadata":{},"sourceType":"module"}