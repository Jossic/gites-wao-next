{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jossi\\\\Dropbox\\\\JOSSIC\\\\6-development\\\\Devs\\\\gites-wao\\\\frontend\\\\components\\\\admin\\\\lists\\\\ListReservation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { getCookie } from '../../../actions/authActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { withRouter } from 'next/router';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Router from 'next/router';\nimport { IconButton } from '@material-ui/core';\nimport { removeReservation } from '../../../actions/reservationActions';\nimport GiteNom from '../../../components/admin/GiteNom';\nimport ClientNom from '../../../components/admin/ClientNom';\nimport AfficheDate from '../AfficheDate';\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  nouveau: {\n    boxShadow: '-1px 2px 5px 1px rgba(0, 0, 0, 0.7), -1px 2px 25px rgba(255, 255, 255, 0.8) inset'\n  }\n}));\n\nconst ListReservation = ({\n  reservations,\n  newReservation,\n  gites,\n  router\n}) => {\n  const classes = useStyles();\n  const token = getCookie('token');\n  const {\n    0: values,\n    1: setvalues\n  } = useState({\n    loading: false,\n    error: '',\n    success: '',\n    message: ''\n  });\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    loading,\n    success,\n    error,\n    message\n  } = values;\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setvalues(_objectSpread(_objectSpread({}, values), {}, {\n      success: false,\n      error: false\n    }));\n    setOpen(false);\n  };\n\n  const deleteReservation = id => {\n    setvalues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    removeReservation(id, token).then(data => {\n      console.log('data vaut', data);\n\n      if (data.error) {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          error: true,\n          success: false\n        }));\n      } else {\n        setvalues(_objectSpread(_objectSpread({}, values), {}, {\n          open: true,\n          loading: false,\n          error: '',\n          success: true,\n          message: data.message\n        }));\n        setTimeout(() => {\n          router.reload();\n        }, 3000);\n      }\n    });\n  };\n\n  const deleteConfirm = id => {\n    if (false) {\n      let answer = window.confirm(`Suppression de la réservation ${id}, êtes-vous sûr ?`);\n\n      if (answer) {\n        deleteReservation(id);\n      }\n    }\n  };\n\n  const columns = [{\n    name: '_id',\n    label: '#',\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: 'client',\n    label: 'Client',\n    options: {\n      filter: true,\n      // Voir pour ajouter un custom filter sur le nom du client\n      sort: true,\n      // Voir pour ajouter un custom sort sur le nom du client\n      customBodyRender: (value, tableMeta, updateValue) => {\n        return __jsx(ClientNom, {\n          value: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }, {\n    name: 'gite',\n    label: 'Gite',\n    options: {\n      filter: true,\n      // Voir pour ajouter un custom filter sur le nom du gîte\n      sort: true,\n      // Voir pour ajouter un custom sort sur le nom du gîte\n      customBodyRender: (value, tableMeta, updateValue) => {\n        return __jsx(GiteNom, {\n          value: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }, {\n    name: 'status',\n    label: 'Status',\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: 'dateRes',\n    label: 'Date de réservation',\n    options: {\n      filter: true,\n      sort: true,\n      sortDirection: 'desc'\n    }\n  }, {\n    name: 'dateArrivee',\n    label: \"Date d'arrivee\",\n    options: {\n      filter: true,\n      sort: true,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        // console.log(value);\n        // console.log(tableMeta.rowData[6]);\n        return __jsx(React.Fragment, null, __jsx(AfficheDate, {\n          value: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 8\n          }\n        }), __jsx(AfficheDate, {\n          value: tableMeta.rowData[6],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 8\n          }\n        }));\n      }\n    }\n  }, {\n    name: 'dateDepart',\n    label: 'Date de départ',\n    options: {\n      filter: true,\n      sort: true,\n      display: 'excluded'\n    }\n  }, {\n    name: 'Consulter',\n    options: {\n      sort: false,\n      filter: false,\n      customBodyRender: (value, tableMeta, updateValue) => {\n        // console.log(tableMeta.rowData);\n        return __jsx(IconButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 7\n          }\n        }, __jsx(Link, {\n          href: `/admin/reservation/${tableMeta.rowData[0]}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 8\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }\n        }, __jsx(VisibilityIcon, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 10\n          }\n        }))));\n      }\n    }\n  }, {\n    name: 'Suppr',\n    options: {\n      customBodyRender: (value, tableMeta, updateValue) => {\n        // console.log(tableMeta.rowData);\n        return __jsx(IconButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }\n        }, __jsx(DeleteForeverIcon, {\n          style: {\n            fontSize: '30px',\n            color: 'red'\n          },\n          onClick: () => deleteConfirm(tableMeta.rowData[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 8\n          }\n        }));\n      }\n    }\n  }];\n  const options = {\n    filterType: 'checkbox',\n    selectableRows: 'none',\n    setRowProps: row => {\n      //ajouter style selon le status\n      for (const gite of gites) {\n        if (row[2].props.value === gite._id) {\n          for (const reservation of reservations) {\n            console.log(reservation);\n\n            if (reservation.status === 'Nouvelle réservation') {\n              return {\n                className: classes.nouveau,\n                style: {\n                  background: gite.couleur1\n                }\n              };\n            } else {\n              return {\n                style: {\n                  background: gite.couleur1\n                }\n              };\n            }\n          }\n        }\n      }\n    }\n  };\n  return __jsx(React.Fragment, null, loading && __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 16\n    }\n  }), success && __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 6\n    }\n  }, message)), error && __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 6\n    }\n  }, error)), __jsx(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 4\n    }\n  }, newReservation > 0 ? `Vous avez ${newReservation} nouvelles réservations !` : `Aucune nouvelle réservation !`), __jsx(MUIDataTable, {\n    title: 'Reservations',\n    data: reservations,\n    columns: columns,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default withRouter(ListReservation);","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/admin/lists/ListReservation.js"],"names":["useState","Link","getCookie","makeStyles","MUIDataTable","CircularProgress","VisibilityIcon","DeleteForeverIcon","Snackbar","withRouter","MuiAlert","Router","IconButton","removeReservation","GiteNom","ClientNom","AfficheDate","Alert","props","useStyles","theme","root","width","marginTop","spacing","nouveau","boxShadow","ListReservation","reservations","newReservation","gites","router","classes","token","values","setvalues","loading","error","success","message","open","setOpen","handleClose","event","reason","deleteReservation","id","then","data","console","log","setTimeout","reload","deleteConfirm","answer","window","confirm","columns","name","label","options","filter","sort","customBodyRender","value","tableMeta","updateValue","sortDirection","rowData","display","fontSize","color","filterType","selectableRows","setRowProps","row","gite","_id","reservation","status","className","style","background","couleur1"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { getCookie } from '../../../actions/authActions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { withRouter } from 'next/router';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Router from 'next/router';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { removeReservation } from '../../../actions/reservationActions';\r\nimport GiteNom from '../../../components/admin/GiteNom';\r\nimport ClientNom from '../../../components/admin/ClientNom';\r\nimport AfficheDate from '../AfficheDate';\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\t'& > * + *': {\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n\tnouveau: {\r\n\t\tboxShadow:\r\n\t\t\t'-1px 2px 5px 1px rgba(0, 0, 0, 0.7), -1px 2px 25px rgba(255, 255, 255, 0.8) inset',\r\n\t},\r\n}));\r\n\r\nconst ListReservation = ({ reservations, newReservation, gites, router }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst token = getCookie('token');\r\n\r\n\tconst [values, setvalues] = useState({\r\n\t\tloading: false,\r\n\t\terror: '',\r\n\t\tsuccess: '',\r\n\t\tmessage: '',\r\n\t});\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst { loading, success, error, message } = values;\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetvalues({ ...values, success: false, error: false });\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst deleteReservation = (id) => {\r\n\t\tsetvalues({ ...values, loading: true });\r\n\t\tremoveReservation(id, token).then((data) => {\r\n\t\t\tconsole.log('data vaut', data);\r\n\t\t\tif (data.error) {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetvalues({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\topen: true,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: '',\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tmessage: data.message,\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\trouter.reload();\r\n\t\t\t\t}, 3000);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteConfirm = (id) => {\r\n\t\tif (typeof window !== 'undefined') {\r\n\t\t\tlet answer = window.confirm(\r\n\t\t\t\t`Suppression de la réservation ${id}, êtes-vous sûr ?`\r\n\t\t\t);\r\n\t\t\tif (answer) {\r\n\t\t\t\tdeleteReservation(id);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tname: '_id',\r\n\t\t\tlabel: '#',\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: true,\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'client',\r\n\t\t\tlabel: 'Client',\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true, // Voir pour ajouter un custom filter sur le nom du client\r\n\t\t\t\tsort: true, // Voir pour ajouter un custom sort sur le nom du client\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\treturn <ClientNom value={value} />;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'gite',\r\n\t\t\tlabel: 'Gite',\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true, // Voir pour ajouter un custom filter sur le nom du gîte\r\n\t\t\t\tsort: true, // Voir pour ajouter un custom sort sur le nom du gîte\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\treturn <GiteNom value={value} />;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'status',\r\n\t\t\tlabel: 'Status',\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: true,\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'dateRes',\r\n\t\t\tlabel: 'Date de réservation',\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: true,\r\n\t\t\t\tsortDirection: 'desc',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'dateArrivee',\r\n\t\t\tlabel: \"Date d'arrivee\",\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: true,\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\t// console.log(value);\r\n\t\t\t\t\t// console.log(tableMeta.rowData[6]);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<AfficheDate value={value} />\r\n\t\t\t\t\t\t\t<AfficheDate value={tableMeta.rowData[6]} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'dateDepart',\r\n\t\t\tlabel: 'Date de départ',\r\n\r\n\t\t\toptions: {\r\n\t\t\t\tfilter: true,\r\n\t\t\t\tsort: true,\r\n\t\t\t\tdisplay: 'excluded',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Consulter',\r\n\t\t\toptions: {\r\n\t\t\t\tsort: false,\r\n\t\t\t\tfilter: false,\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\t// console.log(tableMeta.rowData);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\thref={`/admin/reservation/${tableMeta.rowData[0]}`}>\r\n\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t<VisibilityIcon fontSize='large' />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Suppr',\r\n\t\t\toptions: {\r\n\t\t\t\tcustomBodyRender: (value, tableMeta, updateValue) => {\r\n\t\t\t\t\t// console.log(tableMeta.rowData);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t<DeleteForeverIcon\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: '30px',\r\n\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tdeleteConfirm(tableMeta.rowData[0])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tconst options = {\r\n\t\tfilterType: 'checkbox',\r\n\t\tselectableRows: 'none',\r\n\t\tsetRowProps: (row) => {\r\n\t\t\t//ajouter style selon le status\r\n\t\t\tfor (const gite of gites) {\r\n\t\t\t\tif (row[2].props.value === gite._id) {\r\n\t\t\t\t\tfor (const reservation of reservations) {\r\n\t\t\t\t\t\tconsole.log(reservation);\r\n\t\t\t\t\t\tif (reservation.status === 'Nouvelle réservation') {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tclassName: classes.nouveau,\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackground: gite.couleur1,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackground: gite.couleur1,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <CircularProgress />}\r\n\t\t\t{success && (\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity='success'>\r\n\t\t\t\t\t\t{message}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t)}\r\n\t\t\t{error && (\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity='error'>\r\n\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t)}\r\n\t\t\t<p style={{ color: 'white' }}>\r\n\t\t\t\t{newReservation > 0\r\n\t\t\t\t\t? `Vous avez ${newReservation} nouvelles réservations !`\r\n\t\t\t\t\t: `Aucune nouvelle réservation !`}\r\n\t\t\t</p>\r\n\t\t\t<MUIDataTable\r\n\t\t\t\ttitle={'Reservations'}\r\n\t\t\t\tdata={reservations}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\toptions={options}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ListReservation);\r\n"]},"metadata":{},"sourceType":"module"}