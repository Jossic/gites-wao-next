{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const createReservation = reservation => {\n  console.log('dans action', reservation);\n  return fetch(`${API}/reservation`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reservation)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createContract = reservation => {\n  return fetch(`${API}/reservation/contract/${reservation}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json' // Authorization: `Bearer ${token}`,\n\n    }\n  }).then(response => {\n    console.log('response action', response);\n    const file = new Blob([response.data], {\n      type: 'application/pdf'\n    }); //Build a URL from the file\n\n    const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n    window.open(fileURL);\n  }).catch(err => console.log(err));\n};\nexport const listAllReservations = token => {\n  return fetch(`${API}/reservation`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const countNouvelleReservation = () => {\n  return fetch(`${API}/reservation/count`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listeOneReservation = (id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const afficheReservation = id => {\n  return fetch(`${API}/reservation/${id}/contract`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeReservation = (id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateReservation = (reservation, id, token) => {\n  return fetch(`${API}/reservation/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(reservation)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/actions/reservationActions.js"],"names":["fetch","API","createReservation","reservation","console","log","method","headers","body","JSON","stringify","then","response","json","catch","err","createContract","file","Blob","data","type","fileURL","URL","createObjectURL","window","open","listAllReservations","token","Authorization","countNouvelleReservation","listeOneReservation","id","afficheReservation","removeReservation","updateReservation"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const createReservation = (reservation) => {\r\n\tconsole.log('dans action', reservation);\r\n\treturn fetch(`${API}/reservation`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(reservation),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\nexport const createContract = (reservation) => {\r\n\treturn fetch(`${API}/reservation/contract/${reservation}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t// Authorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log('response action', response);\r\n\t\t\tconst file = new Blob([response.data], { type: 'application/pdf' });\r\n\t\t\t//Build a URL from the file\r\n\t\t\tconst fileURL = URL.createObjectURL(file);\r\n\t\t\t//Open the URL on new Window\r\n\t\t\twindow.open(fileURL);\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listAllReservations = (token) => {\r\n\treturn fetch(`${API}/reservation`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const countNouvelleReservation = () => {\r\n\treturn fetch(`${API}/reservation/count`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const listeOneReservation = (id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const afficheReservation = (id) => {\r\n\treturn fetch(`${API}/reservation/${id}/contract`, {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeReservation = (id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateReservation = (reservation, id, token) => {\r\n\treturn fetch(`${API}/reservation/${id}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t\tbody: JSON.stringify(reservation),\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}