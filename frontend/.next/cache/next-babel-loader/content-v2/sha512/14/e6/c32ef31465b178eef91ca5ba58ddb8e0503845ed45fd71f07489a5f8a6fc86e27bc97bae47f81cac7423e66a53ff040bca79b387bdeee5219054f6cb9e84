{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getCookie } from '../actions/authActions';\nimport { QRCreateReducer, QRDeleteReducer, QRListReducer, QRUpdateReducer } from '../reducers/giteReducers';\nvar store;\nvar isNode = typeof module !== 'undefined';\nvar userInfoFromStorage = null;\n\nif (!isNode) {\n  userInfoFromStorage = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n}\n\nvar userTokenFromCookie = getCookie('token') ? JSON.parse(getCookie('token')) : null;\nvar initialState = {\n  userLogin: {\n    token: userTokenFromCookie,\n    user: userInfoFromStorage\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TICK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lastUpdate: action.lastUpdate,\n        light: !!action.light\n      });\n\n    case 'INCREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    case 'DECREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - 1\n      });\n\n    case 'RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: initialState.count\n      });\n\n    default:\n      return state;\n  }\n};\n\nfunction initStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport var initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n} // const userInfoFromStorage = localStorage.getItem('user')\n// \t? JSON.parse(localStorage.getItem('user'))\n// \t: null;\n// const combinedReducer = combineReducers({\n// \tQRList: QRListReducer,\n// \tQRDelete: QRDeleteReducer,\n// \tQRCreate: QRCreateReducer,\n// \tQRUpdate: QRUpdateReducer,\n// });\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["C:/Users/jossi/Dropbox/JOSSIC/6-development/Devs/gites-wao/frontend/components/store.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","getCookie","QRCreateReducer","QRDeleteReducer","QRListReducer","QRUpdateReducer","store","isNode","module","userInfoFromStorage","localStorage","getItem","JSON","parse","userTokenFromCookie","initialState","userLogin","token","user","reducer","state","action","type","lastUpdate","light","count","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SACCC,eADD,EAECC,eAFD,EAGCC,aAHD,EAICC,eAJD,QAKO,0BALP;AAOA,IAAIC,KAAJ;AAEA,IAAIC,MAAM,GAAG,OAAOC,MAAP,KAAkB,WAA/B;AACA,IAAIC,mBAAmB,GAAG,IAA1B;;AACA,IAAI,CAACF,MAAL,EAAa;AACZE,EAAAA,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IACnBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADmB,GAEnB,IAFH;AAGA;;AACD,IAAMG,mBAAmB,GAAGb,SAAS,CAAC,OAAD,CAAT,GACzBW,IAAI,CAACC,KAAL,CAAWZ,SAAS,CAAC,OAAD,CAApB,CADyB,GAEzB,IAFH;AAIA,IAAMc,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,KAAK,EAAEH,mBAAT;AAA8BI,IAAAA,IAAI,EAAET;AAApC;AADS,CAArB;;AAIA,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,MAAL;AACC,6CACIF,KADJ;AAECG,QAAAA,UAAU,EAAEF,MAAM,CAACE,UAFpB;AAGCC,QAAAA,KAAK,EAAE,CAAC,CAACH,MAAM,CAACG;AAHjB;;AAKD,SAAK,WAAL;AACC,6CACIJ,KADJ;AAECK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAFtB;;AAID,SAAK,WAAL;AACC,6CACIL,KADJ;AAECK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAFtB;;AAID,SAAK,OAAL;AACC,6CACIL,KADJ;AAECK,QAAAA,KAAK,EAAEV,YAAY,CAACU;AAFrB;;AAID;AACC,aAAOL,KAAP;AAvBF;AAyBA,CA1BD;;AA4BA,SAASM,SAAT,GAAkD;AAAA,MAA/BC,cAA+B,uEAAdZ,YAAc;AACjD,SAAOjB,WAAW,CACjBqB,OADiB,EAEjBQ,cAFiB,EAGjB3B,mBAAmB,CAACD,eAAe,EAAhB,CAHF,CAAlB;AAKA;;AAED,OAAO,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,CAACD,cAAD,EAAoB;AAAA;;AAClD,MAAIE,MAAM,cAAGvB,KAAH,6CAAYoB,SAAS,CAACC,cAAD,CAA/B,CADkD,CAGlD;AACA;;;AACA,MAAIA,cAAc,IAAIrB,KAAtB,EAA6B;AAC5BuB,IAAAA,MAAM,GAAGH,SAAS,iCACdpB,KAAK,CAACwB,QAAN,EADc,GAEdH,cAFc,EAAlB,CAD4B,CAK5B;;AACArB,IAAAA,KAAK,GAAGyB,SAAR;AACA,GAZiD,CAclD;;;AACA,aAAmC,OAAOF,MAAP,CAfe,CAgBlD;;AACA,MAAI,CAACvB,KAAL,EAAYA,KAAK,GAAGuB,MAAR;AAEZ,SAAOA,MAAP;AACA,CApBM;AAsBP,OAAO,SAASG,QAAT,CAAkBjB,YAAlB,EAAgC;AAAA;;AACtC,MAAMT,KAAK,GAAGT,OAAO,CAAC;AAAA,WAAM+B,eAAe,CAACb,YAAD,CAArB;AAAA,GAAD,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOT,KAAP;AACA,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;GAdgB0B,Q","sourcesContent":["import { useMemo } from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { getCookie } from '../actions/authActions';\r\nimport {\r\n\tQRCreateReducer,\r\n\tQRDeleteReducer,\r\n\tQRListReducer,\r\n\tQRUpdateReducer,\r\n} from '../reducers/giteReducers';\r\n\r\nlet store;\r\n\r\nvar isNode = typeof module !== 'undefined';\r\nlet userInfoFromStorage = null;\r\nif (!isNode) {\r\n\tuserInfoFromStorage = localStorage.getItem('user')\r\n\t\t? JSON.parse(localStorage.getItem('user'))\r\n\t\t: null;\r\n}\r\nconst userTokenFromCookie = getCookie('token')\r\n\t? JSON.parse(getCookie('token'))\r\n\t: null;\r\n\r\nconst initialState = {\r\n\tuserLogin: { token: userTokenFromCookie, user: userInfoFromStorage },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'TICK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlastUpdate: action.lastUpdate,\r\n\t\t\t\tlight: !!action.light,\r\n\t\t\t};\r\n\t\tcase 'INCREMENT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcount: state.count + 1,\r\n\t\t\t};\r\n\t\tcase 'DECREMENT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcount: state.count - 1,\r\n\t\t\t};\r\n\t\tcase 'RESET':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcount: initialState.count,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nfunction initStore(preloadedState = initialState) {\r\n\treturn createStore(\r\n\t\treducer,\r\n\t\tpreloadedState,\r\n\t\tcomposeWithDevTools(applyMiddleware())\r\n\t);\r\n}\r\n\r\nexport const initializeStore = (preloadedState) => {\r\n\tlet _store = store ?? initStore(preloadedState);\r\n\r\n\t// After navigating to a page with an initial Redux state, merge that state\r\n\t// with the current state in the store, and create a new store\r\n\tif (preloadedState && store) {\r\n\t\t_store = initStore({\r\n\t\t\t...store.getState(),\r\n\t\t\t...preloadedState,\r\n\t\t});\r\n\t\t// Reset the current store\r\n\t\tstore = undefined;\r\n\t}\r\n\r\n\t// For SSG and SSR always create a new store\r\n\tif (typeof window === 'undefined') return _store;\r\n\t// Create the store once in the client\r\n\tif (!store) store = _store;\r\n\r\n\treturn _store;\r\n};\r\n\r\nexport function useStore(initialState) {\r\n\tconst store = useMemo(() => initializeStore(initialState), [initialState]);\r\n\treturn store;\r\n}\r\n\r\n// const userInfoFromStorage = localStorage.getItem('user')\r\n// \t? JSON.parse(localStorage.getItem('user'))\r\n// \t: null;\r\n\r\n// const combinedReducer = combineReducers({\r\n// \tQRList: QRListReducer,\r\n// \tQRDelete: QRDeleteReducer,\r\n// \tQRCreate: QRCreateReducer,\r\n// \tQRUpdate: QRUpdateReducer,\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}